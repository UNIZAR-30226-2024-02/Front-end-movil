import React, { useRef, useState } from 'react';
import { View, Image, StyleSheet, TouchableOpacity, Text as Text1 } from 'react-native';
import { IP } from '../config';
import Svg, { Defs, G, Path, Circle, Use, Text as Text2 , TSpan } from "react-native-svg"
import { useEffect } from 'react';
import { ReactNativeZoomableView } from '@openspacelabs/react-native-zoomable-view';


export default function RiskMap() {
  useEffect(() => {
    onLoad();
  }, []);


  /*
  *
  *  Esto el svg, en react native no puedes meter directamente un svg, por lo que se tiene que hacer un componente que lo renderize
  *  Lo meto aqui para que el acceso a los datos sea mas facil.
  * 
  *  Es un coÃ±azo, pero es lo que hay
  * 
  */

  //Listener de los eventos del svg, De momento o hace nada
  //TODO: Hacer que al hacer click en un territorio se ejecute la funcion swichState
  const eventListener = (key, event) => {
    console.log(key);

  }

  //Esta fundion sirce para buscar el numero de tropas en un territorio y represetarlo en el svg
  const findTropas = (key) => {
    let tropa = tropasTest.find(tropa => tropa.terrainId === key);
    if (tropa) {
      return tropa.numTropas;
    }
    else
      return "";
      
  }
  const MapSVGComponent = (props) => (
  <Svg
    xmlns="http://www.w3.org/2000/svg"
    xmlnsXlink="http://www.w3.org/1999/xlink"
    viewBox="182 114 720 405"
    {...props}
  >
    <Defs>
      <G id="a" fill="#fff" strokeLinejoin="round">
        <Path
        id="b"
        //ALASKA
          fill="#ff0"
          d="M254 242c-1-1 0 0-1-2 0-2-1-2-2-3 0 0-1 0-1-2 1-1 1-1 1-2l-3-3v-2c0-1 0-2-1-2-2-1-3 1-4-1 0-2 0-1-2-1-1 0-2 0-2-1-1-1-1-2-2-2s-2 0-3-1c0-1-1-2-2-2s-1 0-2 1c-2 0 2 1-1 2s-4 1-5 0c0 0-3 1-2 0 0-2 0-2 1-3 1 0 2 0 2-1-1 0-1-1-3 0-3 0-4 0-5 1s-1 2-1 3c0 0 1 0-2 1-3 2-1 0-4 2-3 3-2 3-4 4-3 0-1 0-3 2-2 1-1 2-3 2s-1 3-3 1-3-1-1-2c1-1 1-1 2-1s1 0 2-1c1-2 1-2 2-3 2 0 2 2 3 0 0-3 0-3 1-4s3-2 1-3c-2 0-2 0-3 1-2 0-2 1-4 1-1-1-2-1-2-1v-3s1-1-1-1c-2-1-2 1-2-1 0-1 1-1 0-2s-1-1-2-1c-1 1-3 2-2 0s2-2 3-3c0-1 1-3 1-4 1-1-1-1 1-2 1-1 1-1 3-1s1 0 2 1c2 0 2 1 3 0l2-2 1-1c0-1 1-2-1-1-1 0-1 0-2 1-2 0-2 1-3 0-1-2-1-3-1-3v-1c0-2-1-5 2-6s5 0 6 0c0 1-1 1 0 2 2 0 2 0 3-1 0-1 1-1 0-2-1 0-1 0-2-1v-3l-2-2c0-1-2-3 0-4 3 0 5-1 5-1s2-3 4-2c2 0 4 0 6-2 2-1 4 0 4 0l3 1s2 3 4 2 2 2 5 2c3 1 5 1 8 2 0 0 1 0 1 1-1 1-2 31-2 31l8 1v2c1 1 1 2 2 4 2 2 1 8 1 8l2 3s1 1 2 1v4c0 2-2 1-2 1-1 1-2 3-2 4s-2 1-2 1Z"
          onPress={eventListener.bind(this, "Alaska")}/>
          <Text2
            x="223" y="210" text-anchor="middle" fill="black">{findTropas("ALASKA")}
          </Text2>
        <Path
        //ALBERTA
          fill="#cc6"
          d="M253 214v2c1 1 1 2 2 4 2 2 1 8 1 8l2 3s1 1 2 1v4c0 2-2 1-2 1-1 1-2 3-2 4s-2 1-2 1c1 1 2 1 2 3 1 3 1 2 1 3 1 1 2 1 2 3 1 2 1 1 2 3 1 3 0 4 0 6 1 3 2 2 3 3v1h48l4-48-63-2Z"
            onPress={eventListener.bind(this, "Alberta")}
        />
        <Text2
            x="278" y="255" text-anchor="middle" fill="black">{findTropas("ALBERTA")}
          </Text2>
        <Path
        //America Central
          fill="#ff3"
          d="M264 319s0 3 1 3h8l4 2s1 2 2 2h10c0 1 3 4 4 4s1 0 2 1c0 0 1 1 2 1h5v4c0 1-1 2-1 4-1 1-2 3-2 3 0 1 2 3 2 3-1 2-1 5 0 6v2l2 3s2 3 5 2c3 0 1 0 4-1 2-1 1 1 3-1 1-3 0-3 1-3 2-1 1-1 3-1 1 1 0 1 2 1s3-3 2 0v4c-1 1 0 0-1 2l-2 2c-1 0-1 0-1 1 0 2 0 2-1 3-1 0-2 0-2 1 0 2 0 2 1 3 1 0 2 0 2 1 1 2 1 3 1 3 0 1 0 3-1 3s-2 0-2 2c0 1 1 3 0 3 0 0-2-1-2 0v3l-1 1v2c0 1-1 2 0 2 2 0 2 1 3 0h2c0-1 1-2 2-2l2 1s1 1 1 2c-1 1 0 1 0 2 0 2 0 3-1 3v2c-1 0 0 0-1 1v1c-1 0 0 0-1-1 0 0 0-1-1-2s-1-1-2-1c-2-1-2-2-3-1-1 0 0 1-1 0-2-1-2-1-3-2v-1c-1-1-2 0-2-2 0-1 1-1 0-2 0-1-1-1-1-2v-4l-1-2v-2l-1-1-1-1c0-1-1-3-1-4-1-1-2-2-6-4-4-1-4-2-7-2-4-1-5-2-5-3 0-2 0-2-1-3-1 0-2 0-1-1 0-1 1-1 1-2 1-1 1-2 1-3 0 0 0-1-1-1-1-1-4-3-4-3s1-1-2 0c-4 0-4 2-5 1s1-5 0-6c-2-1-1 0-2-1-1-2 0-3-1-5 0-1 0 1-1-4-1-4 1-3-1-6-2-2-5-2-5-4v-6Z"
            onPress={eventListener.bind(this, "America Central")}
        />
        <Text2
            x="286" y="355" text-anchor="middle" fill="black">{findTropas("AMERICA CENTRAL")}
          </Text2>
        <Path
        //ESTADOS UNIDOS DEL ESTE
          fill="#cc3"
          d="M326 264h6c1 0 0 5 0 5s4-2 6-1c3 1 5-3 6-1 0 3 1 4 2 5 0 1 1 2 2 5s1 5 0 7c0 1-2 3-1 4 2 0 3 2 4 3s5-3 5-4-1-2 0-2c1-1 3 0 3-1 1-1 2-2 3-2s4-1 4-1l2-1s10-1 11-2c2-1 2 0 2 0s-1-4 0-5c0 0 1 0 2-1 0-1 1-1 2 0 1 0 5 2 4 4 0 2-1 5 0 5 2 1 3 0 3 1s1 2 1 2c1 1 3 0 3 0 0-1-1 1-2 2 0 1-1 2-1 2-3 1-3 4-4 3 0-1-1-1-1-3 1-2 2-1 2-3-1-1 0-2-1-2s0 0-2 1c-1 0-1-1-3 1-1 2-1 1-2 2-1 0-1 1-1 2l-2 2v2c0 1 1 3 1 3l-1 2c-1 1-1-1-5 3-3 4-2 4-4 5s-2 1-2 2c0 0-2 1-1 2s0 1 1 2c1 0 2-1 2 1s-1 3-3 4c-2 2-5 6-7 6-3 1-4 2-4 3s0 3-1 3c-2 0-1 0-1 3s0 4 1 5 1 1 1 3v4s1 0-1 1-4 2-4 0c-1-2-3-1-3-3 0-1 1-5 1-5s-2 0-2-1c-1-1-1-4-2-4 0-1-1-1-2-1-1 1-3 2-4 1 0 0 1 1-2 0-4-1-6-2-7-2h-6s-6 1-7 1-6 2-7 3c-2 1-2 3-3 3l-2 1s-2 2-2 3-1 3-2 3c0 1-1 0 0 2 0 0-2-2-2-3 0 0 1-2 2-3 0-2 1-3 1-4v-4s-2-4-1-5c0-1-2-1-2-1v-3h3c1-1 2-1 2-1l1-6c0-1 1-4 1-5s4-2 4-2c1 0 2 1 2 0 1-2 0-5 1-6 0-1 0-1 1-1 0-1 11-1 11-1 1-1 0-37 1-37Z"
            onPress={eventListener.bind(this, "Estados Unidos del Este")}
        />
        <Text2
            x="335" y="326" text-anchor="middle" fill="black">{findTropas("ESTADOS UNIDOS ESTE")}
          </Text2>
        <Path
        //Groenlandia
          fill="#cc0"
          d="M434 219s0 4-1 6c0 2-1 1-1 3-1 2 0 3-1 5-1 1-1-1-1 2 0 4 0 5-1 5-1 1 0 2-1 2-2 0-2 1-3 0 0-2 1-2-1-2-1-1-2 1-3-1 0-1 1-2 0-2-2-1 1 3-3-2s-4-8-4-8-1-1-1-2 1-4 0-5c-1-2-2-5-1-6s3 0 3-2 0-2 1-3c0-1 0-1-1-2-1 0 0 1-2 0-1 0-1-1-2-1 0 0 1 1-1 0s-3-1-1-2c2 0 3-1 4 0 0 0 1 1 0-1 0-1-4-2-4-4v-2c0-1 0-2-1-3s-1-1-1-2c0-2 0-2-1-3s-1 0-2-1c-1-2-1-2-2-2s-1 0-2-1-1-2-2-2c-2 1-3 1-3 2-1 0 0 1-2 1h-4s-1-2-3-1c-2 0-2 1-2 0-1-1-2-1-2-2 0 0-2 0 0-1 1-2 0-2 2-2h3c1-1 2-1 1-1 0 0 0-1-1-1-2 0-3 0-3-1s-1-2 0-2c2 0 3 1 4 0s1-1 2-1c1 1 3 1 3 0s2-1 1-1c-2-1-3-1-2-2 0 0 1 0 1-1-1-1-2-2 0-2 3 0 4 1 4 0 1-2-1-3 1-3 3 0 5-1 5-2s0-1 2-1c2 1 2 2 3 0 1-1 0-1 2-1 2 1 2 1 3 0 1 0-1-1 2 0 2 0 1 1 2-1 0-2-2-2 0-2 3-1 3 0 4-2 1-1 0-1 2-1 2-1 2 0 1-2-1-1-3-2 0-2 2 0 4 0 4-1 0 0 0 1 1 0 2 0 2 0 3-2 0-1 0-1 1 0 1 0 0 1 2 0s1-1 3-1h5c2 0 1 1 2 1h3c2 0 2 0 3 1 1 0 1 1 3 1s3-1 3 0c1 2 0 2 2 2 3 1 4 0 2 1-1 1-4 1-3 2s0 1-2 1c-2 1-6 1-3 2 3 0 5-1 6 0 0 1-1 1 2 1s2-1 4-1c3 1 3 2 3 0 1-2-1-3 2-2s2 1 4 0 2-3 3-1c0 2 0 3-1 4-2 0-2-1-2 1-1 2-1 2-2 3s-2 0-2 2c1 2 1 2 0 3 0 2-1 3 0 4s1 0 2 1c1 2 1 2 0 3 0 2-1 1-1 3 0 3 0 4 1 3 0 0 1-2 1 0 0 1 0 2-1 3-2 1-2 0-2 1s1 2 0 3 0 2-2 1c-1-2-2-3-3-2s-2 0-1 1c1 2 2 1 2 2 0 0 0 1 1 2 0 0 0 1 1 1 1-1 1 0 1 1v2l1 1c-1 1-1 1-2 1-1 1-1 2-1 2-1 0-2 0-2-1s0-3-1-3c-1-1-2-3-2-1v3c-1 0-2-1-1 1l2 1s2 1 1 2c0 0 0 1-2 1-1 0-1-2-2 0l-3 3-1-1s-1-2-1-1 0 1-1 3-1 3-2 3-2-1-2 0c-1 1 0 1-1 2s-2 1-3 1c0 0 1-2-1 0-1 2 0 2-2 3h-8c-1 1-1 2-1 2Z"
            onPress={eventListener.bind(this, "Groenlandia")}
        />
        <Text2
            x="430" y="200" text-anchor="middle" fill="black">{findTropas("GROENLANDIA")}
          </Text2>
        <Path
        //TERRITORIOS DEL NOROESTE
          fill="#996"
          d="M334 217c1-3 9-11 9-11s3 0 5-1c1-1-2-4-2-4l1-2 2 1s1 2 3 2 1-2 2-3c2 0 3-4 3-4s3 2 6-1 1-2 0-3c-1-2 1-3 1-3h-2s1-1 0-4c-2-2-2 2-4 3-1 1-1 2-5 1-3-1 0-2 0-4 0-1-4 1-5-1s-2 1-1-1c0-2-1-5-2-6s3-7 3-7 3 1 3-1c0-3 2-3 2-4s-4 0-4 0l-1 2s-4-3-4 0c0 4-1 4-3 8s-1 7-1 7 2 0 2 2c-1 3-5 2-5 2l-1-4h-2s-1 4 0 6c0 1-8 0-10-2s-5 2-7 3-4 0-6-1c-2 0-1 3-6 3-4-1-2-7-3-4-1 2-6-2-8-4s-7-2-7-2v-2h-6s-3 2-5 1c-2 0-1 2-1 2s-3 1-6 1c-3-1-3 1-4 2-2 1-7-2-10-3s-5 1-8 0c0 0-2 32-2 33 1 0 83 3 87 2 4 0 2 1 2 1Z"
            onPress={eventListener.bind(this, "Territorios del Noroeste")}
        />
        <Text2
            x="300" y="205" text-anchor="middle" fill="black">{findTropas("TERRITORIOS DEL NOROESTE")}
          </Text2>
        <Path
        //ONTARIO
          fill="#ff6"
          d="M333 219c-1 3-2 9-2 9l2 2s2 2 3 4c2 2 3 5 6 5 3-1 4 2 4 2l2-1s2-2 3-1c0 1 2 2 2 2s2-2 4-2 0 2 0 2l-4 2s1 2 2 2 2 4 1 5c-2 1 0 3 0 3l1 2 2 1v3c-1 2-1 19-1 19s1-2 2-2c0 0 2 1 2 2 1 0 1-2 1-2 1-1 1 0 2 0 1 1 0 0 1 0 2 0 2 3 2 4l-2 1s-3 1-4 1-2 1-3 2c0 1-2 0-3 1-1 0 0 1 0 2s-4 5-5 4-2-3-4-3c-1-1 1-3 1-4 1-2 1-4 0-7s-2-4-2-5c-1-1-2-2-2-5-1-2-3 2-6 1-2-1-6 1-6 1s1-5 0-5h-20v-3c0-2 4-45 4-45h18l-1 3Z"
            onPress={eventListener.bind(this, "Ontario")}
        />
        <Text2
            x="320" y="245" text-anchor="middle" fill="black">{findTropas("ONTARIO")}
          </Text2>
        <Path
        //QUEBEC
          fill="#990"
          d="M359 259s1-4 2-5 2-6 2-7c-1-1-2-1-1-3 1-1 0-4 2-3 2 0 4 0 4-1v-2c0-2 1-2 2-2 0 0 1 0 0-2v-3c-1-2-1-1-1-3-1-1-1-4 0-4 2 0 0-2 1-3 2 0 4 0 3-2 0-2-3-6-1-6s4 1 4 1h7s-1 2 1 3c2 0 2 1 3 1 0 1 1 2 1 2v2c0 1 1 2 0 2 0 1-1 1-1 2s1 3 1 3 1 1 2 1c1-1 1-2 2-2 2-1 2 1 3-1s1-2 1-3c0 0 2-2 3-1 1 0-1 5 0 6 1 2 3 0 3 0v3c1 0 0 1 0 2 1 1 1 1 1 2s1 1 1 1 1-1 2 0c0 2 0 3 1 3s2 2 2 2l1 2 3-2 2 1s-4 2-3 4c1 1 5-3 5 0 0 2-1 5-2 5s-2 1-2 1c0 1-2 2-3 2-1 1 0 2-2 2h-4s0 1-1 2v2c-1 0 2 0-2 1s-5 1-5 1h-3s0-1-2-1-3 2-3 2h-2l-2 2s-1 0-1 2c0 1 2 3 3 2 0-1 2-5 4-5s4 1 4 4c-1 3-1 2-1 3 1 2 2 3 1 4 0 1-1 1 1 2 1 1 2 3 3 1 0-2 1-3 2-2 0 0 2-1 1 2-1 2-1 2-2 3s-1-1-3 2c0 0-2 1-3 0 0 0-1-1-1-2s-1 0-3-1c-1 0 0-3 0-5 1-2-3-4-4-4-1-1-2-1-2 0-1 1-2 1-2 1-1 1 0 5 0 5s0-1-2 0c-1 1-11 2-11 2 0-1 0-4-2-4-1 0 0 1-1 0-1 0-1-1-2 0 0 0 0 2-1 2 0-1-2-2-2-2-1 0-2 2-2 2s0-17 1-19Z"
            onPress={eventListener.bind(this, "Quebec")}
        />
        <Text2
            x="370" y="250" text-anchor="middle" fill="black">{findTropas("QUEBEC")}
          </Text2>
        <Path
        //ESTADOS UNIDOS DEL OESTE
          fill="#993"
          d="M326 264c-1 0 0 36-1 37 0 0-11 0-11 1-1 0-1 0-1 1-1 1 0 4-1 6 0 1-1 0-2 0 0 0-4 1-4 2s-1 4-1 5l-1 6s-1 0-2 1h-3v3s2 0 2 1c-1 1 1 5 1 5h-5c-1 0-2-1-2-1-1-1-1-1-2-1s-4-3-4-4h-10c-1 0-2-2-2-2l-4-2h-8c-1 0-1-3-1-3-1-2-1-2-1-4s-3-5-4-7c-2-2-2-8-2-9 1-1 0-6 1-9 1-2 1-5 2-8 0-2-1-2 1-5 1-4 1-2 2-5 0-3 1-1 1-4 0-2 1-4 0-5 0 0-1 1 0 1s58 1 62 0Z"
            onPress={eventListener.bind(this, "Estados Unidos del Oeste")}
        />
        <Text2
            x="280" y="300" text-anchor="middle" fill="black">{findTropas("ESTADOS UNIDOS OESTE")}
          </Text2>
        <Path
        //Argentina
          fill="#c03"
          d="M396 495c0 2 0 3-1 3 0 0-1 1-2 3 0 2-3 3-3 3s-2 1-2 2 5 1 5 1c0 1-1 5 0 5 0 1 4-1 4 0 1 1 0 5 0 5s3 2 4 2c-2 0-5 2-4 3 0 0 1 1 0 1-2 0-2 0-3 1h-3c-2 0-2 1-3 1h-2c-1 0-1 0-1 1v1c1 0 3 1 3 1v2c0 1 0 1 1 1v1s-1 2-2 3c0 0-1 1-3 1h-2c-1 1-1 1-3 1h-3c-1 1-2 1-2 1l1 1c0 1 1 1 0 2 0 2-1 2-2 3v1h-3s0-1-1 1c0 1 1 2 1 2s-1 2-1 3 1 2 0 2v1c-1 1 0 1-1 2l-1 1c-1 1-2 1-2 1v2s-1 0 0 1 1 0 1 2c-1 1 0 1 0 1s1-1 1 3c0 3-1 4-1 4s-1 0 0 1v3c-1 1-1 0-2 2s0 4 1 5c0 1 1 1 1 2s-1 1 0 2c0 1 2 2 2 3v2c1 0 1 1 1 1v5c1-1 0-1 1-2h3l1-1c1 1 1 0 2 2 0 1 0 1 1 1 1 1 2 1 3 1s1-1 2 0c0 1 1 1 0 2h-3l-2 1c-1 0-1 1-2 1s0 1-2 0h-2c-1-1-2-1-2-2v-1l-3-2h-4l-1-1h-2v-2h-2v-1s-1 0-2-1c0 0-1 0-2-1l-1-1-2-2c-1 0-1 0-1-1 0 0-1 0-1-1-1-1 0-1-1-2s-1 0-2-1c0-1 1-2 0-3v-1c-1 0-1 0-1-1s0-2-1-2c0-1-1-1-1-2v-3c0-2 0-2-1-3l-1-1c0-2-1-2-1-3 1-1 1-1 1-2l1-1v-2c0-1-1 0 0-3s1-3 1-4c0 0 1-1 0-2v-2c0-1 1-1 0-2v-1s1 0 0 0c-1-1-1-1-1-2v-10c1-1 1-1 1-2s1-2 0-3v-2c0-1 1-1 1-2v-1c0-1-1 0 0-2 0-3 1-5 1-6v-2c-1 0-1-3-1-4v-2c1-1 1-1 1-2-1 0 0 0 0-1v-4c1-2 1-1 1-3 0-1-2-3-1-4 0-2 1-1 1-3-1-2-1-4 0-5v-6c1-3-1-5-1-5s2-2 3-2 1 2 0 3c0 1 1 2 2 3l3 3c0 1 1 2 2 3 0 1 0 2 1 3 2 1 2 0 3-1v-4c0-2 2 0 2 0s1 2 2 2c0 1 2 1 2 0 1-1 2-1 2-1 1 0 2 1 3 1 2 0 2 0 4 1 1 1 0 2 1 3 2 1 2 0 3 0 0 1 0 2 1 3 2 1 5 0 7 0 1 1 0 2 0 3s0 3-1 3c-1 1-2 2-1 4 0 1 3 0 4-1 2 0 2 0 4-2 1-1 5-3 5-3Z"
            onPress={eventListener.bind(this, "Argentina")}
        />
        <Path
        //BRASIL
        name="Brasil"
          fill="#c36"
          d="m404 403-5 5c-1 1-1 3-2 3s-9 1-9 1 1 2 0 2h-12l-1-5s-2 1-2-1v-4s-3 1-4 2c-2 0-3 3-5 2-1 0-2-2-2 0 0 1 0 5-1 6-1 0-1-1-2 0s-4 2-4 1c-1-1-2-1-2-1-1-1-2-1-2-1-1 0-1-1-2 0l-3 3c0 1-1 3-1 4s2 1 2 3c0 1-1 2-2 2-1 1-6 2-6 2s-4 0-4 1 0 4-1 5-3 1-3 2c-1 1-3 1-2 3 1 1 2 2 3 2s3 0 3 1 3 1 5 2c1 1 5-1 4 1 0 2-4 3-4 4s0 4 3 4c2 0 5-2 7-2s3 0 4-1c0 0 1-2 2-2s3 1 4 2c1 2 1 3 2 3 2 0 1 1 2 1 2 1 3 0 4 1s1 3 2 3c2 0 4-1 5 0 0 1 1 3 2 4v2c0 1 2 1 3 2s1 1 2 3c0 2 1 2 2 3 0 2 2 5 1 6 0 1-1 3 1 4 1 0 2 1 3 2 1 2 1 1 2 2 1 0 1 2 1 5 1 2 4 3 4 5s0 3-1 3c0 0-1 1-2 3 0 2-3 3-3 3s-2 1-2 2 5 1 5 1c0 1-1 5 0 5 0 1 4-1 4 0 1 1 0 5 0 5s3 2 4 2c1-1 0-1 0-1 1-1 1-1 1-2 1-1 1-1 1-2 0 0 0-1 1-1 0-1 1-1 1-2v-2c0-1 2-2 3-2 2-1 1-2 2-3 0-2-1-1-1-2v-3c0-2 0-1 1-1 0-1 0-4 2-7 1-3 12-4 13-4 0 0 3-1 4-2l2-2c1 0 1-1 1-2s0-1 1-1c1-1 0-1 1-2s0-2 0-3c1 0 2-1 3-1s0-2 1-2c1-1 0-4 0-5 0-2 0-2 1-3 0-1-1-3-1-3l1-2s-1-2 0-3c0-1 1-1 2-2 2-1 1-4 1-4v-1s2-1 4-1 2-3 3-4c2-2 1-3 1-5 0 1 0 0-1-2v-3c0-2-1-2-2-3s-3-1-3-1l-3-3c-1 0-4-2-6-2-2-1-2-1-3-2s-1 0-2 0c0 0-1 1-2 0h-2c-1 0-2-1-3-1 0-1 0-1-1-2h-3c0-1-1-1-2-1h-2c-1 0-3-1-3-1-1 0-3 1-4 1s-2-2-3-2c-2-1 1 0 3-3 1-2-1-3-2-4 0-1 0-2-1-4l-1-3Z"
          onPress={eventListener.bind(this, "Brasil")}
        />
        <Path
        //Venezuela
          fill="#f06"
          d="M317 414c2-1 1-3 1-4v-3c0-1 0-2 1-3 2-1 2-3 2-3l1-1v-2l1-2s1-1 1-2v-4l3-1s0 1 1 0c1 0 2-1 2-1l3-1 2-2 2-1h1c1 0 3-1 3-1l1-1c1 0 1-1 2-1l4-1s1 1 1 3c0 1 0 2 1 1h2c1 0 1-2 2-1s1 1 2 1h2l5 2h2c1-1 4-1 4-1s1 1 2 1c0 1 3 2 4 4 1 1 3 2 3 3 0 0 1 1 2 1 0 0 0 1 1 1h2v1c1 1 2 0 2 1 1 1 0 2 1 2h1l2-1s0-1 1 0 1 1 2 1 0 1 2 1c2 1 4 1 5 1 0 0 0-2 2 0 2 1 3 2 3 2l-5 5c-1 1-1 3-2 3s-9 1-9 1 1 2 0 2h-12l-1-5s-2 1-2-1v-4s-3 1-4 2c-2 0-3 3-5 2-1 0-2-2-2 0 0 1 0 5-1 6-1 0-1-1-2 0s-4 2-4 1c-1-1-2-1-2-1-1-1-2-1-2-1-1 0-1-1-2 0l-3 3c0 1-1 3-1 4s2 1 2 3c0 1-1 2-2 2-1 1-6 2-6 2s0-2-1-2c0-1-1-1-2-1-1-1-2-2-3-2h-4c0-1-1-2-3-2-1 0-2 1-3 0-1-2-3-4-4-5 0 0-3 0-2-1Z"
            onPress={eventListener.bind(this, "Venezuela")}
        />
        <Path
        //PERU
          fill="red"
          d="M347 472c1 0 1 2 0 3 0 1 1 2 2 3l3 3c0 1 1 2 2 3 0 1 0 2 1 3 2 1 2 0 3-1v-4c0-2 2 0 2 0s1 2 2 2c0 1 2 1 2 0 1-1 2-1 2-1 1 0 2 1 3 1 2 0 2 0 4 1 1 1 0 2 1 3 2 1 2 0 3 0 0 1 0 2 1 3 2 1 5 0 7 0 1 1 0 2 0 3s0 3-1 3c-1 1-2 2-1 4 0 1 3 0 4-1 2 0 2 0 4-2 1-1 5-3 5-3 0-2-3-3-4-5 0-3 0-5-1-5-1-1-1 0-2-2-1-1-2-2-3-2-2-1-1-3-1-4 1-1-1-4-1-6-1-1-2-1-2-3-1-2-1-2-2-3s-3-1-3-2v-2c-1-1-2-3-2-4-1-1-3 0-5 0-1 0-1-2-2-3s-2 0-4-1c-1 0 0-1-2-1-1 0-1-1-2-3-1-1-3-2-4-2s-2 2-2 2c-1 1-2 1-4 1s-5 2-7 2c-3 0-3-3-3-4s4-2 4-4c1-2-3 0-4-1-2-1-5-1-5-2s-2-1-3-1-2-1-3-2c-1-2 1-2 2-3 0-1 2-1 3-2s1-4 1-5 4-1 4-1 0-2-1-2c0-1-1-1-2-1-1-1-2-2-3-2h-4c0-1-1-2-3-2-1 0-2 1-3 0-1-2-3-4-4-5 0 0-3 0-2-1-2 2-2 4-3 6 0 2-1 3-2 5 0 2 1 1 2 3 0 2-1 1-1 3v5s1 2 1 3c1 0 3 3 3 3s-1 1 0 3c0 2 1 2 2 3 0 1 2 3 3 3 1 1 2 3 3 3 2 1 1 3 1 4-1 1 1 3 1 4 1 1 1 0 2 1 0 1 2 2 2 2 1 1 2 1 2 1l2 2c1 0 2 0 3 1 1 0 2 3 3 3 0 0 2 1 3 2 1 0 2-2 3-2Z"
            onPress={eventListener.bind(this, "Peru")}
        />
        <Path
        //GRAN Bretana
          fill="#33f"
          d="M466 294h-2c-1 0-1 0-2 1-1 0-2 0-3 1-1 0-2 1-2 1l-1 1h-3c-1 0 0-1-1-2 0 0-4 1-2 0 1-1 2 0 1-1s-2-1-1-1h2c0-1-1 0 0-1 1-2 1-2 2-3 1 0 0-2 1-1h2v-1h-3l-2-2c-1 0-2 1-1 0l1-2s-2-1-1-2c0 0 1 0 1-1s-2-1 0-2l2-2c1-1 1-1 2 0 0 0 0 1 1 0l2-2s-1 0 1-1 0-2 3-1h3c1 0 1-2 1 0 1 1 0 1 2 2 1 0 2 0 2 1l-1 1c1 1 1 1 1 2s0 1-1 2c-1 0-1-1-2 1-1 1-2 0-2 0h-1c0 1 0 2-1 1s-3-1-3-1v1c0 1 1 3 1 3s1 2 1 3c-1 1-3 1-1 1 2 1 1 0 1 1s0 2 1 2 2 1 2 1Zm12-11v-4c0-1-1-2-1-2 0-1-1-2-1-2-1-1-1-1-2-1l-1 1c-1 0-1 0-1-1-1 0-1-1-1-2s0 0 1-1l1-1v-3h-2v-1c-1-1-1 0-2 0-1-1 0-1 0-1 0-1 0-1-1-2 0-1 0 0-1 0l-1-1v-1l-1-1c0-1 1-1 1-1l2-2-1-1v-1h-3c-1-1 0-1 1-2 0 0 0-1 1-2 1 0 1 0 2-1 1 0 1 0 1-1s1-2 1-2c0-1 1-2 1-3s2 1 5 0 3 0 3 0 1 3-1 4c-3 1-1 5-1 5s1-1 2-1h1c1 0 1 0 2-1s1 1 1 1c0 1 1 3 1 3s-1 1-1 2v1h-1c-1 1 0 1 0 2-1 0-1 0-2 1v1c-1 1-1 1-2 1-1 1 0 1 0 2s1-1 3-1h2c1 0 1 0 1 1 1 0 0 1 1 1 0 1 0 1 1 1v3s1 3 2 4c2 1 1 1 2 1 0 1 2 4 2 4 0 1 0 1 1 3 0 1 0 1-1 2v3l2-1c2-1 1 0 2-1h2c1 0 1 1 2 2s0 1 1 1c0 1 0 1-1 2v1c-1 1 0 1-1 2h-2c-1 0 0 1-1 1v3s1 0 1 1c1 0 1 0 0 1 0 1-1 1-2 1-1 1-1 0-2 0s-1 0-3 1c-1 1-1 0-2 0h-2c-2 0-2 0-3 1s-1 0-1 0c-1 0-1-1-1-1-1-1-1-1-2 0 0 0-1 2-2 2-1 1-1 0-2 0h-1l-2 2c-1 1-1 0-2 1-1 0-1 0-1-1v-1c1 0 2-2 2-2l2-2c2 0 1 0 1-1 1-2 1-2 2-2 0 0 1-1 0-2-1 0-2 0-3-1-1 0-2 0-2-1l2-2c0-1 0-1 1-1l1-1c1 0 1 0 1-1v-2s1-1 0-2h-1l-1-1v-3s1 0 2 1c1 0 2 2 2 2s1 0 0 0Z"
            onPress={eventListener.bind(this, "Gran Bretana")}
        />
        <Path
        //ISLANDIA
          fill="#36c"
          d="M474 212s2 2 2 1c1-1-1-2 1-1 1 1 1 1 2 1 0 1 3-1 2 1s-2 2-1 2 0 0 1 1 1 2 2 1l1-4s4 0 4 1c-1 2-1 2 0 1 2-1 1-3 3-2 1 1 1 2 2 1 0-1-1-2 0-2 2 0 2 2 3 0s0-3 1-2c1 0 1 0 2-1 1 0 1-1 2 0 1 0 1 1 1 1h2c1 1 0-1 0 1 1 2 1 3 2 3 0-1 1-1 1 0 0 2-2 2 0 2 1 0 2 0 2 1s1 2 1 2v1c0 1-1 1 0 2v1c-1 1-2 1-3 1 0 0-1 1-1 2 0 0 1 0-1 1-1 2 0 2-1 2s-2 1-2 1h-3l-1-1s0-1-1-1v2c-1 0-2-2-2-1s1 3 1 3 0 1-1 1c0 1 0 1-2 2-2 0-2 0-3 1-1 0-1 1-2 0-2-1-7-3-7-3-1 0-2 1-3 0-2 0-3 1-3 0-1-1-1 1 0-1 0-2 2-3 2-3v-1s0-1-1-1l-1-1c0-1 0-1-1-1s-2 1-3 0-1-1-1-2c1 0 1-1 2-1s1 1 2 0c0-2 1-2 1-2s-1-1-2-1c-1 1 0 2-1 0s-2-2-2-2-1 0 0-1l2-2c0-1-1-2 0-3s1 0 1 0h1Z"
            onPress={eventListener.bind(this, "Islandia")}
        />
        <Path
        //EuropaNorte
          fill="#33c"
          d="M563 263h1c1 1 1 2 2 3l3 1h3v1s0 3 1 4v9c0 1 2 3 2 3l1 1c0 1-1 2-1 2v2c0 1-1 1-1 1-1 1-1 2-1 2 0 1-1 1-1 1-2 2-2 5-5 5-1 0-2 1-3 1v2l3 2-1 1-1 1c-1 0-1 1-1 1 0 1-1 1-2 2s-2 4-2 4v3s1 1 1 2-1 2-1 2h-9v-4l-1-1c0-1 0-2 1-2v-2c1-1 0-2-1-2l-2-1s0 1-1 1c-1 1-1 1-2 1s-5 1-5 1v2s-2 2-2 3c-1 0-2 1-3 1h-2c-1 0-1 0-2 1-1 0-2 1-3 1s-2-2-2-3h-1s-1 1-2 1c-1 1-1 1-2 1s-1-1-1-1-1 0-1-1c-1 0-1-1-1-2 0 0-1 0-1-1v-1l-1-1c-1 0-1-1-2-3l-2-2-1-3-1-1c0-1 1-3 2-3 0 0 1 0 1-2v-2c1 0 2 0 2-1 1-1 0-2 0-2 0-1-1-1 1-1 2-1 3 0 3-1 1-1 1-1 1-2s1-1 1-2c1-1 0-1 1-2 0 0 0-4 1-4 0 0 0 1 1 0 0-1 0-2 1-3 0-1 0-1 1-1 1-1 1 0 1-1 1-1-1-1 1-2l2-1c0-1 1-1 1-2v-6c1-1 1-1 0-1s-1 1-1 0v-2c-1-1-1-2-1-2s-1 0 0-1c0-1 1-2 1-2l1-1c1 0 1 1 1 0 1-1 0-1 1-1h2l-1 1v1s1 1 1 2c1 2 1 2 1 3l-1 3s0 1 1 2 1 1 2 1h7l1-1h5c0-1 0 0 1-1 1 0 2-1 2-1h2c1 0 2-1 3 0h2c1 0 1 1 2 0Z"
            onPress={eventListener.bind(this, "EuropaNorte")}
        />
        <Path
        //Escandinavia
          fill="#3cf"
          d="M579 237c-1-1-2-1-2-2-1 0-1-1-2-1h-2c-1 0-2-1-3-1-1 1 0 1-1 1-1 1-3 1-4 1h-2c-2 0-3 1-3 0-1-2-1-1-1-3 0-1 1-2 1-3s0-2 1-3c0-1 1-2 1-2 1-1 1-2 1-2v-4h-2c-1-1-1-1-2 0s-2 1-2 2v3c-1 1-1 1-1 2v1c-1 1-1 1-2 1-1 1-2 0-2 2v2c1 1 1 1 1 2s1 1 1 3v2s1 1 1 2c-1 1-1 3-1 3-1 1-1 2-2 2 0 1 0 1-1 2s-1 1-2 1c-1 1-1 2-1 2v2s1 2 0 2c-1 1-2 1-2 2-1 1 0 2-1 3s-1 1-2 1c-2 0-2 0-3-1 0-1-1-2-2-2h-1s0-1-1-1c0 0-1 1-1 0v-6l-2-3 1-1-1-2h-1s-1 0-1 1v1c-1 1-2 2-3 2-1 1-2 1-2 1s0 1-1 0c-1 0 0 0-1-1s-1-2-1-3l-1-1-1-1c-1 0-1-1-1-2v-3c1-2 0-3 0-3l-1-1v-1c-1-1-2-2-2-3 1-1 0-2 2-3 1 0 1 2 1-1 0-2-1-1 1-3l1-2s1 0 2 1c0 2 0 3 1 2 0-1 1-2 1-3l2-2s-2-2 0-2 2 1 2 0c1-1 1-1 2-1 1-1 1 0 2-1 0-2 0-2 1-2 1-1 1-1 1-3 0-1 0-1 1-3 2-2 2-2 2-3 1-2 1-2 1-3 1 0 2 0 2-1 1 0 1-1 1-1l1-2s-2-1 0-1c1-1 1-1 3-2h2s1 2 1 0c0-1 0-1 1-2s1 0 2 0h1s1 1 2 0c0-1-2-2 0-3s3 0 3-1c1 0 0-1 1-1 1-1 1 0 2-1 2 0 2-1 2-1h2c0 1-1 1 1 1s5-2 6-1c1 0 0 2 1 2s2-1 3-1c0 1 0 1 1 1 0 0 1 4 0 5 0 0 1 4 0 4-1 1-1 6-1 9s1 7 1 9 1 5 1 5v2c0 2 1 3 1 3h1c0 1 0 2-1 2v3c-1 1-1 1-1 2v3c0 1 1 3 0 3Z"
            onPress={eventListener.bind(this, "Escandinavia")}
        />
        <Path
        //EuropaSur
          fill="#39f"
          d="M567 303v-1l1-1s2 0 3 1v3c1 1 1 1 2 1h2s0 1 1 2c0 1 0 2 1 2v4c0 1-1 1-1 1v2l1 1v4c0 1 1 1 1 2-1 0 2 2 2 2l-1 1c1 1 1 2 1 2 0 1 0 1-1 1 0 1-1 1-1 2s1 1 1 2c-1 1-1 1-1 2-1 0-1 1-1 2-1 1 0 1-1 1-1 1-1 1-1 2v1c-1 1-1 1-1 2-1 0-1 0-2 1v1c-1 1-1 0-1 1-1 1 0 1 0 2s1 1 0 2l-2 2s0-1-1 1c0 1 1 1 0 1-1 1-1 1-2 1h-3c0 1-1 1 0 2l1 1 1 1c1 1 1 1 1 2v1s1 2 0 2c0 0-1 0-1 1v1c1 1 0 1 1 2l1 1c1 1 2 1 1 1 0 1-1 1-2 1 0 0-1 0-1-1l-1-1h-1c0 1 2 1 0 1-3 0-2 1-3 0s0-1-1-1h-1c-1-1-1-1-1-2s1-1 0-3v-2c-1-1 0-1 0-2s-1-1-1-1v-2c-1-1-1-1-1-2 0-2 0-2-1-2 0 0 0 1-1 0s0-1-1-2c-1 0-1 1-1 0-1-2-1-1-1-3v-2c0-1 1-1 0-2l-1-1c-1 0-1 1-2-1-1-1-1-2-2-2s-1 1-1 0c-1-1 0-1-1-1-1-1 0-1-1-1-2 0-2-1-3-1-1 1-1 1-1 2v1c0 1 0 2 1 2 0 0 0-1 0 0 0 2 0 3 2 2 1-1 2-1 2-1v2c1 1 0 2 1 3 1 0 1 0 2 1h1c0 1 0 2 1 3 0 1 1 0 1 1-1 1-1 2-1 2-1 0-2 1-3 0 0-1-1-1-1-1s1-1-1-1c-1 0-1 1-2 1s-1-1-1 0l2 2s1 0 1 1c-1 1 0 1-1 2 0 1 0 1-1 2v2c-1 1-1 2-2 2s-1 0-1 1c-1 1-1 1-1 2h-3c0 1 1 1-1 1l-1-1h-2v-2c-1 1-1 2-2 1 0-2 0-2-1-2v-1c-1-1-1-1 0-2s1-1 2-1h1c1 0 1 1 1 1 1 0 3-1 3 0v1c1-2 1-2 2-3 0-1 1-2 2-2v-2c-1-1-2 0-2-2s1-2 0-3c0-1 0 0-1-1-1 0-1-1-1-1-1-1-2-1-3-2 0 0 0 1-1-1-1-1-1-1-2-1 0 0 0 1-1 0 0-1 0-1-1-1 0-1 0 0-1-1-1 0-1 0-1-1v-2c-1-1-2-1-2-1h-4s3 0 1-2c-2-1-2-3-2-3 1 0 2-1 2-2s1-2 0-2c0-1-2-2-2-2l-1-1c0-1 1-2 1-2s1 1 1-1v-3c0-1-1-2 0-2 1-1 1-2 2-2 0-1 0-1 1-1s1 0 2-1c1 0 2-1 2-1h1c0 1 1 3 2 3s2-1 3-1c1-1 1-1 2-1h2c1 0 2-1 3-1 0-1 2-3 2-3v-2s4-1 5-1 1 0 2-1c1 0 1-1 1-1l2 1c1 0 2 1 1 2v2c-1 0-1 1-1 2l1 1v4h9s1-1 1-2-1-2-1-2v-3s1-3 2-4 2-1 2-2c0 0 0-1 1-1l1-1 1-1Z"
            onPress={eventListener.bind(this, "EuropaSur")}
        />
        <Path
        //RUsia
          fill="#36f"
          d="M580 188c-1 0-2-1-2-1s1 4 0 5c0 0 1 4 0 4-1 1-1 6-1 9s1 7 1 9 1 5 1 5v2c0 2 1 3 1 3h1c0 1 0 2-1 2v3c-1 1-1 1-1 2v3c0 1 1 3 0 3-1-1 1 0 1 0 1 1-1 1-2 2h-3c-1 0-1-1-2 0h-6c-1 1-1 2-1 3s1 0 1 2c0 1 1 1 1 1 0 1 1 1 1 1s2 1 2 2v3c0 1-1 1-2 0-2 0-1 0-2-2 0-2 0-1-1-1-1-1-1 0-1 1l-2 2v3c0 1-1 1-1 2-1 0 0 1 0 2 1 1 1 2 1 2 1 0 1 1 1 2l-1 1h1s1 1 1 2l1 1 3 1h3v1s0 3 1 4v9c0 1 2 3 2 3l1 1c0 1-1 2-1 2v2c0 1-1 1-1 1-1 1-1 2-1 2 0 1-1 1-1 1-1 0-3 4-3 4 0 1-2 1-2 1-1 0-2 1-3 1v2l3 2v-1l1-1s2 0 3 1v3c1 1 1 1 2 1h2s0 1 1 2c0 1 0 2 1 2v4c0 1-1 1-1 1v2l1 1v4c0 1 1 1 1 2-1 0 2 2 2 2l1-1s1 0 2-1v-1s0-2 1-3h2c2-1 1 0 2 0h2c1 1 1 1 1 2v3c1 0 1 1 1 1 0 1 1 1 2 2 1 0 0 0 2 1 1 1 0-1 1-2 0-1 1-1 1-1 1 0 1-1 2-1v-1c1-1 0-2 0-2 0-1-1 0-1 0-1 0-2-1-2-2-1 0-1-1-1-1s1-1 2-1c1-1 1-1 2-1h2c0-1 1-1 2-1h4s0-1 1-1c0-1 1 0 1 0v1l-2 2c-1 1-1 0-2 1-2 0-1 0-1 1s-1 1-1 1v2h1v2c0 1 1 0 2 0 0 1-1 1-1 2s2 2 2 2c1 1 1 1 1 2 1 1 1 0 1 0 1-1 1-1 2-1h1v2l1 1c1 1 1 2 2 2s0 0 1 1c0 0 1 1 2 1l1 1c1 0 1 0 1 3s1 0 1 0 0 1-1 2c0 0-1 0-1 1-1 0-1 1-1 1 0 1 0 1 2 2 1 1 1-1 1-1h4s0-1 1-1h2c1-1 1-1 2-1 0-1 1-1 2-1h1c3 0 1 0 1-1s1-1 1-1h1c1-1 1-1 1-2l-1-1s-1-1-1-2 0-1 1-1v-6c0-1 1 0 1-1 1 0 0-2 0-2h-2c-1 0-1 0-2-2-1-1 0-1 0-2-1 0-1 0-1-2 0-1-1-3-1-3h-1l-1-1v-2c1-1 0-2 0-2l-1 1s1-3 2-4v-2c0-1 1 0 2-1 1 0 1-1 1-1s1-1 0-3v-3c0-1-1-1-1-1l-1-1s-1 0-2-1v-4s-1-2-2-3v-3c0-1 0-1 1-2 0-1 1-2 2-2s0-2 0-2 1-3 2-3l3-1c3 0 1 0 2-1s2-1 2-1h2c1 0 3-1 3-1l2-1c1-1 2-1 2-1l1 1h1s2 1 3 1h2c1 0 1 0 2-2 1-1 1-1 1-3 0-1 3-1 4-1l2-2c1 0 0-1 0-3v-3c-1-1-1-2-1-3 0 0 1-1 2-3 1-1 0-2 0-3s-2-1-2-1l-3-2-1-1s-1-1 0-3c0-2 1-2 1-3 1-2 1-3 1-4s-2-1-2-1v-9c0-1 0-4-1-4 0-1 1-3 1-3s-1-2-1-3c-1-1 1-4 1-4l2-5 1-2v-4c1-1 1-4 1-4s-1-7-2-7c0-1-1-1-1-2-1-1-2 0-3 0s-2-1-3-1h-3c-1-1-2 0-3 1 0 1 0 1-1 3-1 1-2 0-3 1-1 0-1-1-2-1-1-1-2 0-3 0s-1 0-3-1c-1-1-1-1-3 1s-2 1-3 1-2 1-2 1l-3 3s-3 1-4 2 0 1-2 2c-1 1-1 0-1-1s0-1 1-2c0-2 0-1-1-1s-1-1-2-2c0-1 0-1-1-2-1 0-2 1-3 1h-2c-1 0 0 1 0 2l1 1v4c0 1 1 1 1 1 1 1 1 1 1 2s-1 0-2 0-2 1-3 2h-2c-1 0-1 1-2 2-2 2-2 1-3 1s-1-1-2-1c-2-1-1 0-2 0s0 1 1 2c0 1 1 2 1 2s0 1-2 2c-1 2-1 0-2 0h-2c-1 0 0 0 0-1v-2c0-1-1-1-1-1v-2c-1 0-1-1-2-1h-2s0-1-1-1l-2-2c-1 0 0-1 0-1 0-1 2-1 3-1s4 1 6 1h4c1 0 3-1 5-1 1 0 2-1 3-2v-2c0-1-1-1-1-2-1-1-1-1-4-3-4-3-4-1-5-1s-1-1-2-1h-8c-1 0-1-1-2-1h-2c-1-1-1-1-2-1-1-1 0 0-1 0Z"
            onPress={eventListener.bind(this, "Rusia")}
        />
        <Path
        //EuropaOccidental
          fill="#39c"
          d="M521 317c-1 0-1 0-1 1-1 0-1 1-2 2-1 0 0 1 0 2v3c0 2-1 1-1 1s-1 1-1 2l1 1s2 1 2 2c1 0 0 1 0 2s-1 2-2 2c0 0 0 2 2 3 2 2 1 2 1 2h-2v1c-1 1-1 1-2 1-1 1 0 1-1 1h-1c0-1 0-1-1-1s-1 0-1-1c1-1 1-1 0-1s-1 1-2 0h-2l-2 3v2s-1 0-1 1 1 1 0 2c-1 0-1 1-1 1-1 0-1 0-1 1-1 0-1 0-1 1v1c0 1 1 1 1 1v2l-1 1v2c1 1 1 2 1 2l1 1s0 1 1 2c0 1 1 1 0 2s-3 1-4 3-1 4-2 5 0 1-1 1-2-2-3 0c0 1-1 2-2 2s-1-1-1 1v2s0 1-1 1h-2c-1 0-1 0-1-1-1 0-1-1-1-1-1-1-1-1-2-1s-1 0-1-1c-1-1-1-1-2-1 0 0 0 1-1 0s-1-2-2-2l-1 1s0 1-1 0h-3c-1 0-1 1-2 0-1 0-2 0-2-1s1-1 0-2c0 0 0-1-1-1 0-1 0-1-1-1h-2c0-1-1 0 0-1v-2c1-1 1-1 1-3 1-1 1-1 1-3 1-1 1-1 1-2s0-1 1-2v-2c0-1 1-1 0-1 0-1-2-2-2-3-1 0-1 0-1-1 0-2-1-1-1-2v-2c0-1-1-1-1-2 0 0 0-1 1-1 0-1 1 0 2-1s1-1 1-2 1-1 1-1h1c1 1 1 1 1 2 0 0-1 0 1 1h5c1 0 1-1 1-1h3c1 0 1 1 1 0 1 0 1 1 2 0 0 0 1 0 1-1 1-1 0-1 1-2s2-1 3-1-1-2-2-2c0 0-1 1-1 0 0 0 0-1 1-2 0-1 1-1 1-1s0-1-1-2c0 0 2-1 1-2-1 0-2-1-2-1-1 0-1 1-2 0v-3c-1 0-1 0-2-1s0-1-1-2-2-1-3-1-1 1-1 0c0-2 0-2 1-3 1 0 3-1 4-1s0-1 2 0h2c1 0 2 1 2 1s1-2 1-3c1 0 1 0 1-1s1-1 2-2c1 0 2 1 2 1s-2 1 0 1c1-1-1-3 2-2 3 0 4 2 4 0s0-2 1-3c0-1 0-1 1-2 2 0 1-2 3-3h2c1 0 1 0 2-1l1 1 1 3 2 2c1 2 1 3 2 3l1 1v1c0 1 1 1 1 1 0 1 0 2 1 2 0 1 1 1 1 1l1 1Z"
            onPress={eventListener.bind(this, "EuropaOccidental")}
        />
        <Path
        //Congo
          fill="#f93"
          d="M595 514c-1 1-1 0-2-3 0-3-1-10-1-11 1-1 3 1 4 0v-7c0-2 2-1 4-1 1-1 2-2 2-4 1-1 1-1 2-1s1-2 1-3c1-1 2-2 2-4 0-1-2-2-4-3-2 0-2 1-5 1-3-1-4-1-5-1s-1-2-2-2c-1-1-2 2-2 2s-1-1-3-4c-1-3-3-4-3-4-1 0-1-3-1-4s-2-1-3-2c0-1 0-2-1-2s-2 0-2-3c0 0-1-3-1-4 0 0-3 3-3 4 0 0 1 2-2 3-2 1-3 1-5 2-1 0-2 2-2 2-1 1-3 1-3 1-1 1-2 1-3 2 0 1-1-1-1 2v4s2-2 2 1c-1 4-2 5-1 6 0 2 1 2-1 3-1 1-2 0-2 0s-1-2-2-1c-2 0-2 1-4 0h-3l-2 1c-1 0-1-1-2-2-1 0-1 2-1 2 0 1 1 2 0 2 0 1-1 2-1 3-1 1-4 2-3 3 1 2 8 7 9 10l2 2c0 1 3-1 3-1 1 1 3 2 4 3 1 0 5-1 6 0l1 1v4c1 1 3 2 3 1 1-2 8-2 8-1 1 1 0 3 1 4s2 1 2 2-2 2-1 4c0 1 2 2 3 1 2 0 2 1 3 2h7c0 1 1 2 2 2 0 1 1 3 2 2s2-5 1-6c-2 0-2 0-2-2 0-1 0-4 1-4l1-1s4 0 3-1Z"
            onPress={eventListener.bind(this, "Congo")}
        />
        <Path
        //Africa Oriental
          fill="#c60"
          d="M575 454s-1-2-2-3 0-3 0-4 0-1 1-2v-1l1-2v-2c0-1 0-1-1-1s0 0 1-1 0-2 1-3c0-1-1-5-1-6 0 0 2-1 3-1 0 0 0-5 2-5 1-1 29 1 29-1v1c0 1 1 1 1 1s2 1 2 2c1 1 1 0 1 1 0 0 0 3 1 4 0 2 0 1 1 2s1 0 1 2 1 2 2 4c1 1 0 0 0 2 1 1 1 2 1 3 1 1 1 1 2 1v1c0 2 3 2 4 4l2 2c0 1 0 1-1 3s0 2 1 3c0 1 4 1 4 1s3 0 4-1l1-1c1-1 4 0 7-1 2 0 6-3 7 0 2 2-4 13-6 18s-8 10-12 14c-4 3-7 8-7 8 0 1-1 2-2 2l-2 2c-1 1-1 1-3 2-1 1-1 2-1 3v2c-1 1 0 3 0 4v3s0 1 1 1c2 1 1 6 1 6s-2 2-3 2-2 1-2 1-1 0-2 1c-2 0-3 0-4 1-1 2 0 2 1 5 1 2-1 1-1 2v4c0 1-1 2-2 2 0 1-2-1-3-2-1-2 0-4 1-5 0-2-2-4-2-5v-3c1-1 1 0 0-2 0-2-1-2-2-3 0 0-1-2-2-2s-1-1-1-2-2-1-2-1c-1 1-1 0-2-3 0-3-1-10-1-11 1-1 3 1 4 0v-7c0-2 2-1 4-1 1-1 2-2 2-4 1-1 1-1 2-1s1-2 1-3c1-1 2-2 2-4 0-1-2-2-4-3-2 0-2 1-5 1-3-1-4-1-5-1s-1-2-2-2c-1-1-2 2-2 2s-1-1-3-4c-1-3-3-4-3-4-1 0-1-3-1-4s-2-1-3-2c0-1 0-2-1-2s-2 0-2-3c-1-2-1-4-1-4Z"
            onPress={eventListener.bind(this, "AfricaOriental")}
        />
        <Path
        //Egipto
          fill="#f90"
          d="M575 429c0-1-4 0-5 0l-1-1s-1-3-1-4-3 1-4 0v-2c0-2-2-1-3-1s-2-1-3-2c-1 0-2 1-3 1-2 0-2 0-2-1-1-1-2 0-4 0s-1-1-2-2-2 0-4-1c-2 0-1-1-1-2-1-1-2-1-2-1v-7c0-1 0-3-2-4-1 0 0-2 0-2v-2c0-1 1-2 2-2s1-1 1-1l-2-4c0-1 2-1 2-1v-1s1 0 2-1c2-1 1-3 1-3h3c2 1 2 1 3 2s1 2 3 2c2 1 3 1 4 1s4-1 4-1c1-1 3-1 9-1s6 3 7 3c2-1 3 0 4 0s3 1 4 1 3 1 3 1c1 0 6 2 7 2l2-2 1 1h1c1 0 1-1 1-1l2-1 2 4s-1 3-1 4v2c-1 1-1 0-2 0l-3-3c-1-1 0 3 0 3s3 4 7 10 0 3 1 4c1 2 2 2 2 4 1 3 0 1 1 3v-1c0 2-28 0-29 1-2 0-2 5-2 5-1 0-3 1-3 1Z"
            onPress={eventListener.bind(this, "Egipto")}
        />
        <Path
        //Madagasgar
          fill="#c63"
          d="M659 534c1 1 1 0 1 3 0 2 1 5-1 3-1-2-1-3-1-1v3s1 2 0 2h-2v2l-1 1-1 3s2 0 1 2c-1 1-1 2-1 2v2c-1 3-1 4-1 4s1 0 0 1c-2 2-2 3-2 4-1 0 0 1-1 2l-2 2-1 1v2c0 1-1 1-1 1v1c0 1 0 2-1 2-1 1 0 1-2 2-1 1-1 0-1 2s0 2-1 2-10 1-11 0c-2 0 1-7-1-8s-3-6-2-6l1-1 2-2c0-1 1-1 1-1s-1-3 0-3v-2s0-2 1-2c1-1-1-2 1-2 1-1 2 0 2-1s-1-1-2-1c0 0-1 0-1-2 0-1 0 0-1-1 0-2-1-1 0-3 2-1 2 0 2-2 0-1-1-2 1-2 1 0 2 0 4-1h2c3 0 3 1 4 0s2-1 2-2 0-2 1-2c2-1 2 0 3-1 0-1 1-2 1-3s-1-1 0-1c2 0 2 0 3-1v-2c1-2 0-2 1-3 1 0 3-2 3-2s0-1 1 1 0 2 1 3 1 0 1 1v3l-2 1Z"
            onPress={eventListener.bind(this, "Madagascar")}
        />
        <Path
        //Africa Norte
          fill="#f60"
          d="M544 385c-1-1-1-1-1-2-1-1-1-2-2-2-1-1-1 1-2-1 0-2 0-4-1-4l-2-2-2-2-2-1h-8l-2 2c-1 0-4 2-4 2h-4s0 1-1 2-3 2-4 1h-2c-2 0-3 2-4 2-1-1-2 0-3 0-1 1 0 1-2 1h-8c-1 0-2 1-2 1v5l-3 4s0 2-1 5l-2 4-1 4-2 1c0 1 1 2 0 2 0 1-1 0-2 2 0 1-1 2-1 3 0 0 1 1 0 2s-2 1-2 3-1 4 0 5 1 2 1 4v3c0 2 1 2 1 3 0 2-1 3-1 5s-1 2-1 4-3 3-1 4c2 2 2 3 2 5 1 1 5 1 5 4s4 3 4 4c0 2-1 4 2 5 3 2 3 3 4 4 0 0 3 1 4 2 0 0 1 2 2 2 0 1 1 2 3 2s2 0 6-1h11c1-1 1-2 2-3h10c1 1 1 0 2 2s-1 4 3 4c5 0 8-1 9 0 0 1-2 3-2 4 1 2 1 2 1 3 1 1 1 2 2 2l2-1h3c2 1 2 0 4 0 1-1 2 1 2 1s1 1 2 0c2-1 1-1 1-3-1-1 0-2 1-6 0-3-2-1-2-1v-4c0-3 1-1 1-2 1-1 2-1 3-2 0 0 2 0 3-1 0 0 1-2 2-2 2-1 3-1 5-2 3-1 2-3 2-3 0-1 3-4 3-4s-1-2-2-3 0-3 0-4 0-1 1-2v-1l1-2v-2c0-1 0-1-1-1s0 0 1-1 0-2 1-3c0-1-1-5-1-6s-4 0-5 0l-1-1s-1-3-1-4-3 1-4 0v-2c0-2-2-1-3-1s-2-1-3-2c-1 0-2 1-3 1-2 0-2 0-2-1-1-1-2 0-4 0s-1-1-2-2-2 0-4-1c-2 0-1-1-1-2-1-1-2-1-2-1v-7c0-1 0-3-2-4-1 0 0-2 0-2v-2c0-1 1-2 2-2s1-1 1-1l-2-4c0-1 2-1 2-1v-1s1 0 2-1c2-1 1-3 1-3Z"
            onPress={eventListener.bind(this, "AfricaNorte")}
        />
        <Path
        //Sudafrica
          fill="#f63"
          d="M547 504c0 1 3-1 3-1 1 1 3 2 4 3 1 0 5-1 6 0l1 1v4c1 1 3 2 3 1 1-2 8-2 8-1 1 1 0 3 1 4s2 1 2 2-2 2-1 4c0 1 2 2 3 1 2 0 2 1 3 2h7c0 1 1 2 2 2 0 1 1 3 2 2s2-5 1-6c-2 0-2 0-2-2 0-1 0-4 1-4l1-1s4 0 3-1c0 0 2 0 2 1s0 2 1 2 2 2 2 2c1 1 2 1 2 3 1 2 1 1 0 2v3c0 1 2 3 2 5-1 1-2 3-1 5 1 1 3 3 3 2 1 0 2-1 2-2v-4c0-1 2 0 1-2-1-3-2-3-1-5 1-1 2-1 4-1 1-1 2-1 2-1s1-1 2-1 3-2 3-2 3-1 2 0c0 1 1 4 1 4v2c1 1 0 1 1 2 0 1-1 2-1 2v3c0 1 0 3-1 4 0 0-1 0-1 1-1 0-1 1-2 2s-1 1-1 2c-1 2-1 1-2 3l-1 1c-2 0-2 1-3 1 0 0-2 2-2 6-1 5 0 6 0 7s-3 4-3 5-1 1-2 1c-1 1-1 3-1 4 0 0 0 3-2 4-1 1 0 1 0 2 1 0 1 1 1 2-1 2-2 1-3 2-1 0-3 3-3 4 1 1 2 1 2 1s-2 2-4 3c-1 2 1 2 1 3s-1 0-2 0c0 0-1 0-1 1-1 1-2 1-5 1-4 1-1 2-3 3s-2 1-7 1-3 1-4 1c-1 1-1 1-2 1s-2 0-3 1l-1 1-1-1c0-1-1-1-2-1s-1 0-2-1 0-2 0-2c0-1-1-3-1-4v-8c-1 0-2-1-2-3v-3c0-1-1 0-1-1-1 0-1-1-2-2v-5c0-1 0-1-1-2 0-1-1-3-1-4-1-1-1-2-1-3s0-1 1-2c0 0-1-1-1-2l-3-3-1-1c0-1-1-2-2-3s0-1 0-2v-3c-1-1-2-3-2-3v-3c1-1 1-1 1-2v-2c0-1 0-1 1-2 0-1 1-1 1-2 0-2 1-3 1-3 0-1 1-1 1-2 1-1 0-1 0-2v-2c0-1-2-4-3-5 0-1 2-3 4-5 2-3-4-8-4-9Z"
            onPress={eventListener.bind(this, "Sudafrica")}
        />
        <Path
        //Afganistan
          fill="#3c0"
          d="M707 296c-1 0-1-2-2-2l-1-1v-3l-2-1h-3c-1 0-3 0-4-1 0 0 0-1-1 0h-3l-2-1s-1 0-1-1c-1 0-1-2-2-2 0-1-1-2-1-2-1 0-1-1-2-2 0 0-1 0-2-1 0 0-1 0-1-1 0 0 0-1-1-1h-1s0-2-1-2c0-1-1-2-2-2s-1 0-2-1v-1s-2-1-2-2l-1-1-1-2h-2l-2-1v1c-1 0-1 0-2 1-1 0-4 0-4 1 0 2 0 2-1 3-1 2-1 2-2 2h-2c-1 0-2-1-2-1h-2l-1-1s-1 0-1 1c-1 0-3 1-3 1s-2 1-3 1h-1c-1 0-2 0-3 1 0 1 1 1-2 1-2 1-2 1-3 1s-2 3-2 3 1 2 0 2-1 1-2 2c0 1-1 1-1 2 1 1 0 2 1 3 0 1 1 3 1 3s1 0 0 1v3c1 1 2 1 2 1l1 1s1 0 1 1 1 2 1 3c0 0 1 2 1 1 1 0 2-1 2-2s0-2 1-2h2c1-1 1-1 2-1s1 0 1 1c1 1 0 0 1 2v4c0 2 0 2-1 2-1 1-3 2-3 3v2c0 2 0 3 1 3 1 1 1 0 1 2 0 1-1 1 0 1h3s2 0 1 2c0 1-1 0 0 2 0 1 0 0 1 2 0 2-1 2 0 2s2 1 2 1l1 2v2s-2-1-2 0c0 2 1 2 1 2s2 0 2 1v3c0 1 1 1 1 2v2c1 1 2 1 3 1 0 0 1-2 2-2h2c0 1 1 1 2 1 0 0 1 0 1 1 1 1 1 1 2 1v2c0 1 1 1 2 1h2c1 0 2 2 2 2 0 1 1 1 1 1s3 0 3-1c1-1 3-3 3-4 0 0 0-2 1-2 0 0 2-1 3 0 1 0 2 0 3-1 0-1 0-4 2-4 1 0 2-1 3 0s4 3 4 3 3 0 5-1c1-1 2-3 2-4v-2c0-1-1-4-1-4s0-1-1-1-2-2-2-2v-3s0-4 1-4l2-1h3c1-1 1-5 2-6 0-1 0-2 1-2s2 0 2-2c0-1 0-5-1-6s-1-2-1-3l1-1v-2Z"
            onPress={eventListener.bind(this, "Afganistan")}
        />
        <Path
        //China
          fill="#3f0"
          d="M802 324c-1 0 0 0 0 1v1c0 1 1 1 1 1 1 0 0 1 0 2s0 1 1 1 1 0 1 2c0 1 1 0 2 0l1 1c0 1 0 1-2 1-1 1 2 1 3 2 1 0 1 2 1 3-1 1 0 1 1 3 1 1 0 2-1 4-1 3 1 2 2 2s1 4 0 5c-1 2 0 2 0 4s0 2-1 4c0 2 0 1-1 2v4c0 2-1 2-3 2-1 0 0 0 0 1s-1 1-2 2 0 1-1 2c0 2 0 1-1 2l-2 2v3c0 1-1 0-1 0-1 0-2 0-2 1-1 1-2 1-3 3-2 1 0 0 0 1 1 1-1 1-1 2-1 0-1 1-2 2s-2-2-4-3l-1-2c1 0-1-2-1-2-1 0-1-1-1-1 0-1-1-1-1-1v-2l-1-1h-2l-1-2h-1c-1 1-1 1-1 2-1 0-2 1-2 1s1 1 0 1h-3c-1 0-1 1-1 2 0 0 0 2-1 2s-3 0-3-1c-1-1-2-3-3-3-1 1-2-1-2-2l-1-1s-1 0-1-1 0-2-1-3c0 0-1 0-1-1-1 0-1-1-2-1h-1c0 1-1 2-1 2l-1 1h-1l-3-7h-10s-1 2-2 2l-1-2v-4c-1 0-3-1-3-1-1 0-1 2-2 2 0 0-4-2-4-3s1-1-1-1c-1 0 0 1-2 1-2-1-2-1-3-1 0-1-1-2-2-2s-3-1-3-1c0-1-1-1-1-1 0-1 0-2-1-3l-2 1c-1 1-2 0-2-1s1-2 1-2c1 0 2-1 2-1v-7c-1-1-1-4-1-4v-1c0-1 1-1 1-1h-6l-2-1v-3s0-1-1-1l-1 2v1c-2 1-3 0-3 0v-2c0-1-1-4-1-4s0-1-1-1-2-2-2-2v-3s0-4 1-4l2-1h3c1-1 1-5 2-6 0-1 0-2 1-2s2 0 2-2c0-1 0-5-1-6s-1-2-1-3l1-1v-2c1 1 1 0 2 0 2 0 1-1 1-2v-1c-1-1 0-1 0-2 0 0 2-1 2-2v-4h4c1-1 0-5 0-5h2c0 1 1 1 1 1 1 0 1 0 2 1 0 2 1 1 2 1 2 0 3-1 4-2 1 0 1 1 2 2 0 1 0 1 1 2 1 0 1 1 2 2v2c0 1-1 1-2 3-1 1 1 0 2 1l1 1c1 0 1-1 2-1 1-1 0 1 1 1 0 0 1 1 2 1l1 2c1 0 2 6 2 6h1v2s2 1 2 2v1c0 1 2 1 2 1v2s0 1 1 1h3c1 0 1 0 1 1v1c0 1 1 1 1 1h1c0 1 1 1 2 1v2s0 1 1 1 9-1 9-1v1h2c0 1 1 0 2 1h4s0 1 1 2l2-1s0-1 1 0c0 0 0-2 1-2h2s3-1 3 0v2c1 0 2 1 2 1 1 0 2-1 2-1 1 0 1-1 2-1 1 1 2 1 2 1s1 0 2 1h2s3 0 4 1 2 1 3 1Z"
            onPress={eventListener.bind(this, "China")}
        />
        <Path
        //INDIA
          fill="#090"
          d="M701 335c0 1-1 3-2 4-2 1-5 1-5 1s-3-2-4-3-2 0-3 0c-2 0-2 3-2 4-1 1-2 1-3 1-1-1-3 0-3 0-1 0-1 2-1 2 0 1-2 3-3 4 0 1-3 2-3 1v3s0 1-1 8c0 3 1 1 2 3v2c0 1 1 3 2 4v2c0 1 1 2 2 3s1 3 0 4 1 1 1 3c1 1 2 5 2 6l2-2c1 0 3 0 3 1 1 1 0 3 1 4l2 1h2c1 0 1-1 1 1v2c1 1 3 1 3 1s2 0 1 1-2 1-2 2-1 1 0 1 1 0 1 1l1 1c1 1 0 1 2 1 1 1 2 0 2 0v-1s1-2 2 0c1 1 0 1 0 3s-1 4-1 5v6c0 2 2 1 2 2 0 2-1 2 0 3 1 0 2 2 2 3v2c0 1 0 2 1 3 1 0 2 0 2 2 0 1 1 3 1 3s1 1 1 2l1 1c0 1 1 0 2 5s2 2 3 6 2 5 3 5 2 0 2-1 0-1 1-1c1-1 1-1 1-2s-1-1-1-2c1 0 0-2 1-2 2 0 3-1 3-1l-1-1v-3c1-3 1-4 1-6 0-3-1-2 0-5s2-1 2-4c0-2 1-4 1-6 0-1 1 0 1-2 0-1-1-2 0-3s2-2 2-3v-3l1-2s2 0 1-1v-4c1-1 2-4 3-3l2 1 2-2v-2s0-2 1-2h3s-1-4 0-4 2 0 2-1 1-2 1-2c1 0 1-3 1-3h2s0-4 1-5 2-3 2-3l-3-7h-10s-1 2-2 2l-1-2v-4c-1 0-3-1-3-1-1 0-1 2-2 2 0 0-4-2-4-3s1-1-1-1c-1 0 0 1-2 1-2-1-2-1-3-1 0-1-1-2-2-2s-3-1-3-1c0-1-1-1-1-1 0-1 0-2-1-3l-2 1c-1 1-2 0-2-1s1-2 1-2c1 0 2-1 2-1v-7c-1-1-1-4-1-4v-1c0-1 1-1 1-1h-6l-2-1v-3s0-1-1-1l-1 2v1c-2 1-3 0-3 0Z"
            onPress={eventListener.bind(this, "India")}
        />
        <Path
        //IRKUTSK
          fill="#3f6"
          d="M807 271v1s-1 1-2 1c-1-1-2-1-2-2s-1-1-1-1-2 0-2-1c0 0 0-1-1-2v-2h-2v-1c-1-1-1-2-1-2l-1-1c-1 0-2 1-2 0v-4s-1 0-1-1c0 0 0-1-1-1s-1 0-2 1l-1 1h-4l-1-1h-1c0 1 1 1 0 2v1c-1 0-2 0-2 1l1 1v1c1 0 1 0 1 1s0 2-1 2l-1 1v1c0 1-1 1 0 2 0 0 0 1 1 1v2c0 1 0 1-1 2 0 0-1 1-1 2-1 0 0 1-1 0-1 0-1-1-1-1v-1c-1-1-1-2-1-2s-2-1-2 0c-1 0 0 1-1 1l-1 1c0 1-1 2-2 1h-3c-1 1-2 2-2 1-1 0-2 0-2-1h-5c-1 0-2-1-3-1s-3-1-4-1-1 0-2 1c0 0-1-1-1 0 0 0 0 1-1 1h-2c0-1-1-1-1-1s0-1-1 0h-1l-1-1-1-1-2 1h-1c-2 0-1 0-2-1-1 0 0-1-1-3-1-1-1 1-1 1s-1 0-2-2c0-2 1-1 1-3v-3c0-2 1-1 1-1v-4c0-3-1-1-2-3-1-1 0-1 0-2 1 0 1-1 2-2 1-2 1-1 3-2 2 0 1-2 3-3 2 0 1 0 2 1s2 0 3-1c2 0 2-1 4 0 2 0 1 0 2 1 0 2 1 2 3-1 2-2 0-8-1-11-1-4 3-11 3-11s5-2 6-2c1-1 1-1 2-3 0-2 0-5 2-5 1 0 1 2 1 2 0 1 1 0 3 1 1 0 0-1 0-2v-1c0-1 12 0 12 0v3s2 3 1 5c0 2-1 8 0 9 0 1 0 4 1 5s1 1 1 2c1 1 4 2 5 3 1 2 0 2 1 3 1 0 2 2 2 3s0 3 1 3c1-1 2-2 3-2 0 0 1-1 2 0h5s1 1 1 2 0 1 1 1c2 0 2 0 2 2 1 2 2 2 2 2v3s-1 1-1 2c1 2 1 3 1 4-1 0-2 2-2 3v5Z"
            onPress={eventListener.bind(this, "Irkutsk")}
        />
        <Path
        //JAPON
          fill="#0f6"
          d="M829 335v-5c-1 0-1-1-2 0-1 0-3-1-3-1s0-1 2-2c2-2 3-2 3-2l-1-1s-2 0-1-1 1-2 2-3 3-6 4-8c2-2 4-2 4-2l2-5s-1-3 1-5c3-1 3 1 4-2s3-3 3-4 1-1 0-3c0-2-2-3-2-3v-4c0-2-1-4 1-4 1-1-2-4-2-4s1-1 0-2c-1 0-1-1-1-2v-3s1-2 2-2c0 0 1 0 1-1 0-2-1-5-1-5s-4-5-4-6c-1 0-1 0 0-1 0-1 4 4 6 4 3 1 5 0 5 0l2-1h5s2 0 2 2 3 2 2 3c-2 2-1 3-3 3-1 0-1-1-2-1 0 0-1 0-1 2s1 2 0 4c-1 1-1 2-2 2h-6c-1 1-2-1-2 1 0 1 0 2 1 2s1 0 1 1-2 2-1 2c1 1 2 0 2 1h3v1s1 0 2 1c1 0 2-1 2 0s1 2 1 2v1c1 1 1 2 1 3s-1 3-1 3-1 1-1 3c1 1 1 0 1 1 1 2 1 3 1 4s-1 1 1 2c1 1 1 2 1 2s1 0 1 1v3h-3l-1 1c0 2-1 2-1 2s0 2-1 2-1 0-2 1h-2c0 1 0 2-1 2 0 0-1-2-2 1 0 2 2 3 0 3-2 1-3 1-3 1s0 2-1 1c-1 0-2-1-2-2s-1-2-1-2l-2 2s0 1-2 1c-1 0-2-2-2 0 1 2 1 3 2 4 0 1 1 0 1 1-1 1 0 1-1 2s-2 1-3 1h-2c-1 0-2 7-2 7l-1 1h-1Z"
            onPress={eventListener.bind(this, "Japon")}
        />
        <Path
        //KAMCHATKA
          fill="#0c6"
          d="M818 289c1-1 1 0 2-2 0-2 0-2 1-3 0 0 2-3 2-4 0-2-1-2-1-3 1-2 1-2 1-4s0-2 1-4v-4c0-1-1-2-1-3v-6l-2-2v-1c-1-1-1-1-1-2s-1 1-1-3c1-3 1-4 1-4s-1-4-3-4-3 1-3-1-1-2-3-2c-1-1-2 0-2-1h-4c-2-1-2 0-2-1s0-2 1-5c2-2 2-3 2-4 1-2-1-1 1-3 3-2 2-3 5-3 2 0 3 0 4-1 2-1 1-2 3-1s2 2 3 1c2-1 2-2 3-2l3 2h1c1 0 2 2 3 0s0-2 0-3c-1 0-2 2-2-1 1-3 1-4 1-5-1-1-3-5 0-3 3 3 2 3 3 4 2 0 1 0 1 3 1 2 5 1 4 4 0 3 0 4-1 6 0 1-1 0-1 5s1 14 5 18c5 4 6 5 7 3 0-2 1-2 0-4 0-2-1-3 0-5 1-1 1-2 1-3s1-2 1-3c-1-1 0-3-1-4v-4c0-1-1-2-2-3 0-1-1-3-2-4 0-1 0-2 1-4 1-1-1-2 2-2s2 1 4 1c1-1 3 0 3-2 1-1 1-1 1-2 1-2 2-1 3-3 1-1-1-2 2-4 2-2 4-3 4-3 1-1 2-1 1-2s-1-2-2-3c-2-1-2-2-3-2s-2 0-1-1c1 0 2-1 3-1s1 1 2 0c2-1 2-1 3 0 1 0 1 0 1 1 1 2 0 1 2 2 2 2 4 2 4 2 1 0 0 1 2 0l2-2c1-2 2-2 1-4 0-1-1-2-1-3l-1-2s0-1-1-1h-3c0-1 0-2-1-2s-2-1-2 0c-1 1-2 2-2 1-1 0-2-1-2-1v-2l-2-2-2-1s-3-3-4-3-3 0-3-1 2-1-1-1c-3-1-4 0-5-2-1-1 1-2-2-2-2 0-3 1-5 0-3-1-3-2-4-1s0 1-1 2c-2 1-1 2-3 2s-2 1-3 0c-1 0-1-1-3-1h-2c-2 0-1 1-3 0l-4-2c-2-1-2-1-3-1s-5-1-6 0c0 0-1 2-1 3s1 3-1 3h-1c-1 0-1 0-1 1-1 0-1 0-1 1-1 1-1 2-2 2 0 0-2 0-2 1-1 0 0 0-1 3 0 3 0 7 1 8h4s1 1 1 2v3c0 1-1 1-1 2v3c-1 0-2 1-2 1h-3s0-1-1-1h-3c-1 0 0 1-1 0-1-2 0-3-1-4 0 0-4 0-5 1 0 2-2 3-2 3s-1-2-2 1-3 5-3 5 1 3 0 4l-3 3v3s2 3 1 5c0 2-1 8 0 9 0 1 0 4 1 5s1 1 1 2c1 1 4 2 5 3 1 2 0 2 1 3 1 0 2 2 2 3s0 3 1 3c1-1 2-2 3-2 0 0 1-1 2 0h5s1 1 1 2 0 1 1 1c2 0 2 0 2 2 1 2 2 2 2 2v3s-1 1-1 2c1 2 1 3 1 4-1 0-2 2-2 3v8c0 1-4 1-2 3s2 4 4 4 3 3 3 4c1 1 1 2 3 2 1 0 1 2 2 2h1Z"
            onPress={eventListener.bind(this, "Kamchatka")}
        />
        <Path
        //ORIENTE MEDIO
          fill="#0f0"
          d="M652 343c0 1 1 1-1 1l-2 2s1 1-2 1c-3-1-3-1-4-2-2 0-1 1-3 0-1-1-1-1-1-2-1-1-3-2-3-2s-1 0-1 1 2 1-1 1h-1c-1 0-2 0-2 1-1 0-1 0-2 1h-2c-1 0-1 1-1 1h-4s0 2-1 1c-2-1-2-1-2-2 0 0 0-1 1-1 0 0-1-2-3-1-1 0-3 0-3 1 0 0-1 1-2 1 0 1-2 1-3 0 0-1-1-2-4-3-2-1-4-2-5-1s0 1-2 1c-2-1-4-1-4-1-1 0-2 0-2 1 0 0 0 1-1 1s-2 1-2 1c-1 0-1 1-3 1s-4 0-5-1c-1 0-2-1-2-2l-1-1h-2l-1 1c-1 1-1 1-1 2-1 0-1 0-2 1v1c-1 1-1 0-1 1-1 1 0 1 0 2s1 1 0 2c0 0 1 2 1 3 1 1 2 1 1 2-1 0-2 0-2 1s2 4 3 5 0 4 1 5c2 1 3 2 4 2s2-2 3-1c0 2-1 4 0 4s3 1 3 1c0-1-1-3 0-3 1-1 0-3 3-2 2 1 2 2 4 2h4c1 0 2 1 2 0 1-1 1-2 2-2s3-1 4 1c0 1-1 2-1 3s1 1 1 7 1 9 0 10c-1 0-2 2-2 3 1 1 2 4 2 6 1 2 1 3 1 4 1 1-1 1 1 3 1 1 4 2 4 4 0 1 2 1 3 3 1 1 2 4 2 6 1 2 2-1 3 2 0 3 3 2 3 4 1 2 3 4 4 5 1 0 4 1 4 3-1 1 2 3 2 4v4s0 1 1 2 1 1 2 3c0 1 1 1 1 1s10-1 13-2 7-3 7-4 0 0 2-1c1 0 2-2 2-2l2-2s0-2 1-1c1 0 3 1 3 0s-1 0 2-5 4-7 3-8c0-1 0-1 1-2 1 0 2-3 2-3l-1-2 1-2s1-4 0-5c-1 0-1-1-1-2 0-2-1-3-1-3s0 1-2 0c-1 0-3-2-3-2s-2 1-2 0 1-3 0-2c-1 0-2 0-3 1 0 1 1 2-2 2s-4 1-5 0c-1-2-1-2-1-3 0-2 1-1-1-2-1-1-2-1-2-2v-1s-2 0-2-1c-1-1 1-2-1-4l-2-2c0-1-1-2-1-2s-1 0-1-1c1-1 1-1 2-1 2 0 2-1 3-1 1-1 0-1 2-1 1-1 1-2 1 0 1 1 1 2 1 4v4c1 1 1 2 1 2 0 1 1 2 1 2h1c1 0 1-1 1 0s0 1 1 1c0 1 0 1 1 1s1-1 2-1 1 1 1 1 2 0 2-1-1-2 0-3c0 0 1-2 2 0 1 3 0 3 1 4 0 1 1 1 2 1s1 0 2-1 2-1 2-1-1-2 0-2c2-1 3-2 3-2l1-1 1-1h3s-1-5-2-6c0-2-2-2-1-3s1-3 0-4-2-2-2-3v-2c-1-1-2-3-2-4v-2c-1-2-2 0-2-3 1-7 1-8 1-8v-3s-1 0-1-1c0 0-1-2-2-2h-2c-1 0-2 0-2-1v-2c-1 0-1 0-2-1 0-1-1-1-1-1-1 0-2 0-2-1h-2c-1 0-2 2-2 2-1 0-2 0-3-1h-1v2Z"
            onPress={eventListener.bind(this, "Oriente Medio")}
        />
        <Path
        //MONGOLIA
          fill="#096"
          d="m737 273 1 1c0 1 1 2 0 4-1 1-2 3-1 5s3 2 3 4c0 1-1 0-1 2v4c0 1-1 2-1 2l1 2c1 0 2 6 2 6h1v2s2 1 2 2v1c0 1 2 1 2 1v2s0 1 1 1h3c1 0 1 0 1 1v1c0 1 1 1 1 1h1c0 1 1 1 2 1v2s0 1 1 1 9-1 9-1v1h2c0 1 1 0 2 1h4s0 1 1 2l2-1s0-1 1 0c0 0 0-2 1-2h2s3-1 3 0v2c1 0 2 1 2 1 1 0 2-1 2-1 1 0 1-1 2-1 1 1 2 1 2 1s1 0 2 1h2s3 0 4 1c0 0 2 1 3 1 1-1 1 0 2-1 1-2 0-1 2-3 1-2 3-2 1-2-3 0-2 0-3-1-1 0 0-1-2-1-1 1-1 1-2 0 0 0 1-1-1-1s-1 1-2 0c-2-1-2 0-2-1s0-2 1-2c1-1 1 0 2-1 0 0 1 0 1-1s1-1 1-2c1-1 1-3 1-3 1 0 1 0 2 2 0 2-1 2 1 2 1 1 2 1 3 1 1-1 0 0 1 1l2 2c1 0 1 2 1 2h4s-1-1 0 1 1 2 1 4-1 3 0 3c1 1 2 1 2 1s3-2 3-4c0-1 1-1 1-2s-1 0 0-1v-3s0-1-1-1l-1-1c0-2 1-2 0-2s-2-1-2-2 0-1-1-1l-1-1c-2-1-2-1-3-2-1 0-1-1-1-1 0-1 0-2 1-2 0-1 1 1 1-2 0-2-1-2 0-4 1-3 1-3 2-4 0-1 0 0 2-2h-1c-1 0-1-2-2-2-2 0-2-1-3-2 0-1-1-4-3-4s-2-2-4-4 2-2 2-3v-2s-1 1-2 1c-1-1-2-1-2-2s-1-1-1-1-2 0-2-1c0 0 0-1-1-2v-2h-2v-1c-1-1-1-2-1-2l-1-1c-1 0-2 1-2 0v-4s-1 0-1-1c0 0 0-1-1-1s-1 0-2 1l-1 1h-4l-1-1h-1c0 1 1 1 0 2v1c-1 0-2 0-2 1l1 1v1c1 0 1 0 1 1s0 2-1 2l-1 1v1c0 1-1 1 0 2 0 0 0 1 1 1v2c0 1 0 1-1 2 0 0-1 1-1 2-1 0 0 1-1 0-1 0-1-1-1-1v-1c-1-1-1-2-1-2s-2-1-2 0c-1 0 0 1-1 1l-1 1c0 1-1 2-2 1h-3c-1 1-2 2-2 1-1 0-2 0-2-1h-5c-1 0-2-1-3-1s-3-1-4-1-1 0-2 1c0 0-1-1-1 0 0 0 0 1-1 1h-2c0-1-1-1-1-1s0-1-1 0h-1l-1-1-1-1-2 1h-1Z"
            onPress={eventListener.bind(this, "Mongolia")}
        />
        <Path
        //SUDESTE ASIATICO
          fill="#3c6"
          d="M788 388c-2-1 0-2-3-3-4 0-4 9-3 10 0 1 1 2 3 2 2-1 2 0 2 2 1 2 0 4 0 4s1 0 2-1c1 0 3 1 4 4 1 4 1 4 2 6s1 3 2 6c0 2-1 6-1 7 0 2-4 6-4 7s-3 3-3 4-2-1-2-1-1-3-1-4l-2-2 1-2s-2-1-3-1-1-1-1-1l-2-1s0-1-1-1c-2 0-1 0-2 1 0 1 0 1-2 2-1 2 1 1 2 2 1 2 1 1 1 3s0 3 2 8c1 4 1 1 1 1s1 1 1 2c0 2-1 2-1 2h-4c-1-1 0-1-3-4-2-3-2-4-3-4-1-1 0-2 0-3 0-2 0-3-1-4s-1-2-1-4c-1-1 0-3 0-4 0-2-1-2-1-4l-1-2s-4-3-5-2-2-2-2-2-3 1-4 0c0-2-6-8-7-10 0-2 0-4-1-4s-2-3-2-3l-1-2c-1-3 0-4 0-4 1 0 2 0 2-1s1-2 1-2c1 0 1-3 1-3h2s0-4 1-5 2-3 2-3h1l1-1s1-1 1-2h1c1 0 1 1 2 1 0 1 1 1 1 1 1 1 1 2 1 3s1 1 1 1l1 1c0 1 1 3 2 2 1 0 2 2 3 3 0 1 2 1 3 1s1-2 1-2c0-1 0-2 1-2h3c1 0 0-1 0-1s1-1 2-1c0-1 0-1 1-2h1l1 2h2l1 1v2s1 0 1 1c0 0 0 1 1 1 0 0 2 2 1 2l1 3Z"
            onPress={eventListener.bind(this, "Sudeste AsiÃ¡tico")}
        />
        <Path
        //SIBERIA
          fill="#0c0"
          d="M683 193c1 2 2 1 3 0s0 0 0-2c0-1 0-1-1-2s0 0-2 0h-5c-2 0-1-1-1-2v-2l-2-2v-4c0-1 0 0-1-1v-1l1-1h2l1 1h2l3 3c2 2 1 0 2 0h1s-2-1-2-2c0 0 1-1 1-2 0 0 0-2-1-2 0-1-1-1-1-2-1 0-1-2-1-2s-1 0 0-3c1-2 1 1 1 1h1l1 2 2-1c1 0 2 2 2 2h3c1 0 2-1 2-2s-2 0-2 0l-3-1s-4-1-5-2 0-2 0-2l2-2s1-1 2-1h3s1-3 1-4c0-2 3-1 3-1s1 0 2-1c0 0 2-2 5-4 4-2 4-1 5-1h4c0-1 2-2 2-2 1 0 3-1 3-1 0 1 1 2 1 3 0 0 1-1 3-2s1-1 2-2 1-1 3-1c1 1 0 2 0 3 1 1 2 2 4 3 1 1 4-4 4-1 1 2 4 3 4 4l-3 3-2 2v2c0 1 0 0-2 1l-2 2c0 1-1 1-2 1s0 1-1 2c0 1 1 1 1 1s1-1 2-1c0-1 3-2 3-2 1-1 3-2 4-3 1-2 3-1 4-1 1-1 2 0 2 0s1 0 2-1c1 0 4-1 5-1 0 0 2 0 3 1l3 3 2-1v3c0 1 0 2 1 3s1 1 2 1v5c0 1-1 1-1 1-1 1-1 2-1 3 0 2-1 1-1 3-1 1 0 1 0 2 1 1 1 2 1 3 0 2 0 1-1 1s-1 1-3 1c-1 0-2 1-3 0 0-1-1-1-3-1-3 0-1 1-1 2s-1 1-3 1c-1 1-1 1-1 2 0 2 2 3 3 3l2 2s1 0 3 1c1 2 0 2-1 3s0 4 1 5c1 0 1 1 2 4 0 3 1 3 1 3s1 1 1 4 1 6 1 6-4 7-3 11c1 3 3 9 1 11-2 3-3 3-3 1-1-1 0-1-2-1-2-1-2 0-4 0-1 1-2 2-3 1s0-1-2-1c-2 1-1 3-3 3-2 1-2 0-3 2-1 1-1 2-2 2 0 1-1 1 0 2 1 2 2 0 2 3v4s-1-1-1 1v3c0 2-1 1-1 3 1 2 2 2 2 2s0-2 1-1c1 2 0 3 1 3 1 1 0 1 2 1l1 1c0 1 1 2 0 4-1 1-2 3-1 5s3 2 3 4c0 1-1 0-1 2v4s-1 1-1 2c-1 0-2-1-2-1-1 0 0-2-1-1-1 0-1 1-2 1l-1-1c-1-1-3 0-2-1 1-2 2-2 2-3v-2c-1-1-1-2-2-2-1-1-1-1-1-2-1-1-1-2-2-2-1 1-2 2-4 2-1 0-2 1-2-1-1-1-1-1-2-1 0 0-1 0-1-1 1-1 1 0 1-2 0-1 0-4-1-5s-1-1-1-2v-1c-1 0-2-2-3-3 0-1-1-1-1-1-1 0-2-2-2-2s-4 0-3-1v-2c0-1 1-3 0-4 0-1-1-2-2-2s-2 0-2 1c-1 1-2 1-2 1s-1 0-1-1c0 0 0-3 1-4 1-2 1 0 1 0 1-1 1-3 1-3 0-1 0-2 1-3s2-1 2-2c1-1 1-1 1-2-1 0-2-1-2-2s1-1 0-2-1-1-1-2c0 0 1 0 0-1-2-1-2 0-2-2v-3c1-1 0-3 0-4-1 0-1-1-2-1v-2c-1 0-2-1-2-2l-1-1c0-1-1-2-2-2l-2-1c-1-1-1-2 0-2v-3c-1-1-1-2-1-3 0-2 0-2-1-2h-2v-3l-2-4-1-1c-1-1-2-1-2-1-1-1-1-1-1-2-1-1-1-3-1-3Z"
            onPress={eventListener.bind(this, "Siberia")}
        />
        <Path
        //URAL
          fill="#390"
          d="M665 265c1 0 0-1 0-3v-3c0-1-1-2-1-3 0 0 2-1 2-3 1-1 0-2 0-3s-2-1-2-1l-3-2-1-1v-3c0-2 1-2 2-3v-4c0-1-1-1-1-1v-9c0-1-1-3-2-4 0-1 1-3 1-3s-1-2-1-3 1-4 1-4l2-5 1-2s0-4 1-4v-4s-1-7-2-7l1-3-1-1v-2l-3-1 1-3s1-2 2-2c0 0-2-2-2-3v-1c1 0 1-1 1-2l-1-1 1-3 3 1 1 1c1 1 2 0 2 0 1 0 0 1 1 2 1 2 1 0 2 0 1 1 1 2 1 2 0 1-1 2-1 3l-2 2c-1 1 2 2 2 2s0 1 1 2c0 1 0 0 1 1 1 0 0 1 0 2 0 0 1 1 1 2 1 1 0 1 1 3 1 1 2-1 2-1s0 1 1 2c0 1 2 1 2 1l2-2 1-1c1 0 0 0 1 2s0 3 1 4c0 1 0 1 1 2 0 0 1 0 2 1l1 1 2 4v3h2c1 0 1 0 1 2 0 1 0 2 1 3v3c-1 0-1 1 0 2l2 1c1 0 2 1 2 2l1 1c0 1 1 2 2 2v2c1 0 1 1 2 1 0 1 1 3 0 4v3c0 2 0 1 2 2 1 1 0 1 0 1 0 1 0 1 1 2s0 1 0 2 1 2 2 2c0 1 0 1-1 2 0 1-1 1-2 2s-1 2-1 3c0 0 0 2-1 3 0 0 0-2-1 0-1 1-1 4-1 4 0 1 1 1 1 1s1 0 2-1c0-1 1-1 2-1s2 1 2 2c1 1 0 3 0 4v2c-1 1 3 1 3 1s1 2 2 2c0 0 1 0 1 1 1 1 2 3 3 3v1c0 1 0 1 1 2s1 4 1 5c0 2 0 1-1 2h-2s1 4 0 5h-4v4c0 1-2 2-2 2 0 1-1 1 0 2v1c0 1 1 2-1 2-1 0-1 1-2 0-1 0-1-2-2-2l-1-1v-3l-2-1h-3c-1 0-3 0-4-1 0 0 0-1-1 0h-3l-2-1s-1 0-1-1c-1 0-1-2-2-2 0-1-1-2-1-2-1 0-1-1-2-2 0 0-1 0-2-1 0 0-1 0-1-1 0 0 0-1-1-1h-1s0-2-1-2c0-1-1-2-2-2s-1 0-2-1v-1s-2-1-2-2l-1-1-1-2h-2l-2-1Z"
            onPress={eventListener.bind(this, "Ural")}
        />
        <Path
        //YAKUTSK
          fill="#396"
          d="M810 170c-1-1 0-1-1-2-2-1-3-1-4-1-1-1-1-1-1-2 1-2 3-2 0-2-2-1-2-2-3-2-2 0-2 0-3 1h-1v1c-1 0-1 0-2-1s0-1-1-1h-2c-2 1-2 1-4 1-1 0-3 2-3 2h-1c-1 0 0-1-2 1-2 1-1 1-3 1-1 0 0-1-2 0s-2 0-2 1-1 2-1 2v-2c-1-1-1-1-1-2s-5-2-6-4c-1-1-1-1-1-3 0-1-3-2-4-2 0 0-1 2-2 2-1 1-1 2-2 3-1 0-2 1-2 1v3c0 1 0 2 1 3s1 1 2 1v5c0 1-1 1-1 1-1 1-1 2-1 3 0 2-1 1-1 3-1 1 0 1 0 2 1 1 1 2 1 3 0 2 0 1-1 1s-1 1-3 1c-1 0-2 1-3 0 0-1-1-1-3-1-3 0-1 1-1 2s-1 1-3 1c-1 1-1 1-1 2 0 2 2 3 3 3l2 2s1 0 3 1c1 2 0 2-1 3s0 4 1 5c1 0 1 1 2 4 0 3 1 3 1 3s1 1 1 4 1 6 1 6 5-2 6-2c1-1 1-1 2-3 0-2 0-5 2-5 1 0 1 2 1 2 0 1 1 0 3 1 1 0 0-1 0-2v-1c0-1 12 0 12 0l3-3c1-1 0-4 0-4s2-2 3-5 2-1 2-1 2-1 2-3c1-1 5-1 5-1 1 1 0 2 1 4 1 1 0 0 1 0h3c1 0 1 1 1 1h3s1-1 2-1v-3c0-1 1-1 1-2v-3c0-1-1-2-1-2h-4c-1-1-1-5-1-8 1-3 0-3 1-3 0-1 2-1 2-1 1 0 1-1 2-2 0-1 0-1 1-1 0-1 1-1 2-1 2 0 1-2 1-3l-1-1Z"
            onPress={eventListener.bind(this, "Yakutsk")}
        />
        <Path
        //AUSTRALIA ORIENTAL
          fill="#93f"
          d="M825 511v-1c1-2 0-4 1-5 1-2 1-2 3-2l2-2c0-1 1-1 2-1s2 1 3 0 0-2 1-1h2c1 1 2 1 5 1 2-1 3-2 3-1 0 2 0 2 1 2s1 0 0 1c0 1 0 0-1 2-2 2-3 2-3 4v2s0 2 1 2 1 0 3-1c2 0 3 0 3 2 0 1 1 4 2 4 1 1 1 1 3 1 2-1 3 0 3-1v-4c0-1-2 1 1-2 2-4 2-2 2-6-1-3-2-3-1-6l1-2s2 0 2 2c0 3 1 5 1 6s1 5 1 5 1 1 2 1c0-1 1-1 1-2s1-3 1-2 1 1 1 2v3c1 2 2 3 2 3v9c0 2 0 2 1 2l1 1c1 0 1-1 2 0 0 1 0 1 2 1 1 1 2 0 2 0s1 1 1 2-1 2 0 3c0 2 0 2 1 2h1s1 1 1 3v2l1 1s1 1 1 2c1 1 2 1 2 1v2l1 1c1 2 1 2 1 3s1 2 1 3v4c-1 2 0-1-1 2v5c0 1 0 1-1 3v3s-1 2-2 2-3-1-3 0 0 2 1 2 1-1 1 1c0 1 0 1-1 2s-1 1-2 1c-2 1-1 0-2 2-1 3 0 3-1 4-1 0-1 0-1 1-1 2-1 2-1 3v2s-2 1-2 3c0 1 1 1 1 2-1 1 0 1-2 1h-2l-3 1s0-1-1-1c-1 1-1 1-1 2-1 1-1 1-2 1-1 1 0 1-1 2 0 1 0 1-1 1-1-1-2 0-2-1 0-2 0-2-2-2-1-1-2-1-2-1v1c-1 1 0 2-2 2-1 1-1 1-2 0v-7c1-1 0-1-1-2 0-1 1-43 1-43 0-1-30 0-30 0v-38Z"
            onPress={eventListener.bind(this, "Australia Oriental")}
        />
        <Path
        //NUEVA GUINEA
          fill="#c3f"
          d="M825 457s1-3 2-3c1-1 0-1 0-3 0-1-1-2 0-2 2-1 2 0 4-1 1 0 3-1 3-1l2 2h3c2 0 3 1 4 3s0 3 3 4c3 2 5 3 7 3 1 1 3 2 2 3 0 2 2 2 0 3 0 0 5 2 6 4 1 1 2 2 1 3-2 1-3 0-3 1s1 2 1 3c1 1 2 2 2 4 0 1 0 2 1 3 2 1 2 1 2 2v2s-1 1-3 1-3-1-3-1c-1 0-3-1-3-1s-1-4-5-5c-3-1-3-2-3-1s1 2 0 3h-3c-1 0 3 2-2 2-4 0-5-2-7-1s-7-4-7-4-3 1-3-1c0-1-1-1 0-3 1-1 1-1 1-2v-4c0-1 1-2 0-2-1-1-2-1-2-2-1-1-1-2-1-2-1 0 0 1-2 1-1 0-2 1-4-1-1-2-1-2-3-2-3 0-8 4-4 0 4-3 5-3 5-3s-4 0-4-2c0-1-1-3-2-4-1 0-2 0-1-2 0-1 1-5 4-5 4 0 5 1 6 2 1 0 3-1 3 0v5s1 1 2 3l1 1Z"
            onPress={eventListener.bind(this, "Nueva Guinea")}
        />
        <Path
        //INDONESIA
          fill="#63c"
          d="M771 513c1 1 0 2 2 2s3-1 4-1c2 1 1 1 2 1 2 0 3-1 4-1h3s2 1 3 1h5c0 1 2 2 3 1s1-1 1-2 0-2-1-2c0-1 0-1-2-1s-3-1-3-1c-1 0-2-1-3-1 0-1-3-2-4-2h-5c-2 0-2 0-4 1-1 1-2 1-3 2s-1 0-1 1l-1 2Zm23-8c1-2 0-2 0-3 0-2 1-1 1-2 1-1 1-3 2-1s1 3 2 4 2 2 3 1 3-2 2-4c-2-1-2 0-2-3-1-3-1-4-2-4 0 0-1 1-1-1 0-1-1-3 0-4 2 0 3 1 4 0 1-2 2-3 0-3h-3c-1 0-2 0-2-1s-1-1 1-1h3c2 0 3-1 4-2 0 0 1-2 2-3l1-1c0-1-1-1-1-2h-3c0 1-1 2-2 3h-6c-1 1-2 1-2 2-1 0-2 1-2 2v4s-1 2-1 3c-1 0 0 2-1 3v2c0 1-1 1 0 2 0 1 1 1 0 2 0 1-1 1 0 2 0 1 1 1 1 2v3c0 1 2 0 2 0Zm-10-7s-1-1 1-3c3-2 3-2 3-4s0-2-1-3-2-2-1-3c1-2 1-2 3-3 1 0 3-2 3-3v-3c0-1-1-3-2-4v-4c0-1 1-1 2-2 2-1 2-1 2-3s0-4-1-5c-1 0-1 0-2-1-2 0-2-1-4-2-2-2-3-2-4-1 0 1 1-2 0 2-1 3-1 3-1 4-1 1-3 1-3 2 0 2 1 2-1 5-2 2-6 6-8 6-3 1-5 1-5 2s1 2 1 3-2 2-2 3c1 0 1 0 2 1v4l3 3s-2 3-1 3l2 2c1 2 2 3 4 3 1 0 2 1 3 1 1 1 2 0 3 0s4 1 4 0Zm-24-17 1-1v6c1 0 0 1 0 2s1 3 1 3l1 1 2 1v1c1 1 2 1 2 1v2c0 1-1 2 0 2h3c1 0 0 1 1 2 0 1 1 1 1 2v3c-1 1 0 1-1 2s-2 1-2 1c-1 0-1 0-2 1 0 1 2 2 0 2-3-1-3 0-3-1-1-1 1-2-1-3-2 0 0 2-3-1-3-4-3-1-4-4 0-4-1-4-3-7-1-2-2-4-3-4s-2 1-3-1v-2c0-2 0-2-1-4-1-1-1-1-2-3 0-2 0-1-2-4s-3-3-5-5c-2-1-2-1-2-3s-1-4 0-5c1 0 1-1 3 0 1 1 1 2 2 2h2c1 0 1-1 2 1 1 1 2 1 2 3l2 2c0 1 1 1 1 1 1-1 2-2 2-1s0 1 1 1c0 1 1-1 1 1 0 3-1 4 0 3l2-2 1 1c0 1 0 3 1 3 1 1 2 1 2 1h1Z"
            onPress={eventListener.bind(this, "Indonesia")}
        />
        <Path
        //AUSTRALIA OCCIDENTAL
          fill="#c3c"
          d="M855 601v-7c1-1 0-1-1-2 0-1 1-43 1-43 0-1-30 0-30 0v-38l-3-1-2-2c-1 0-2 2-2 3-1 0-3 1-3 1s-1 2-1 3c0 2-2 0-4 1s0 1-1 3c0 1 0 0-2 0-1 0 0 1-2 2-1 1-1 0-2 2-2 1-1 1-1 3-1 1-1 0-3 1-1 1-2 3-3 4s-2 0-4 0h-3c-1 0-1 1-2 2s-1 2-3 3c-1 1 0 0-2 1-2 0-1 0-3 1s0 2-1 3c0 1 0 1-1 3 0 1 0 1 1 3 0 1 2 0 2 0s-1 2 0 3c0 1-1 0-2 0-2 0-1 0-1 2v1l-1 1c-1 1 0 1 0 2 0 2 1 2 1 3 1 2 1 1 2 3s0 2 0 4 0 1 1 4c0 2 1 1 1 1l2 2s0 1 1 2c0 2-1 2-1 3v3c0 2-1 1-2 2s0 1-1 2c0 2 0 1 1 2s2 1 3 2c2 3 5 2 8 0 2-1 1-1 2-1 1-1 1-1 2-1l2-2c1-1 0 0 2-1 1 0 1-1 3-2h4c2 0 1 0 1 1 1 1 2 1 2 1 1 0 2 0 3-1 1 0 0-1 0-2v-2c1-1 2-2 3-2s3 0 3-1c1-1 1 0 3 0l2-2c1-1 1-1 3-1h3c2 0 2 1 3 1s2 1 3 2c1 0 0 0 0 2 0 1 0 1 2 4 1 2 2 2 2 2s1-1 2-3 1 0 3-1c1-1 0-1 1-3 0-3 1-1 2-1s0 2 0 4l-2 2-2 2c-1 2-1 1-1 3 1 1 2-1 3-2s1-1 2-1v4c0 1 0 1 1 1 1 1 1 2 0 3v3c1 1 2 3 3 4s1 0 1 1c1 0 1 1 2 1Z"
            onPress={eventListener.bind(this, "Australia Occidental")}
        />
      </G>
    </Defs>
    <Circle r={99999} fill="#fff" />
    <G
      strokeLinecap="round"
      strokeLinejoin="round"
      fontFamily="Helvetica,Arial,sans-serif"
      fontSize={18}
      letterSpacing={-1}
      textAnchor="middle"
      transform="scale(1 .85)"
    >
      <Use xlinkHref="#a" stroke="#9ff" strokeWidth={15} />
      <Use xlinkHref="#a" stroke="#fff" strokeWidth={14} />
      <Use xlinkHref="#a" stroke="#9ef" strokeWidth={10} />
      <Use xlinkHref="#a" stroke="#fff" strokeWidth={9} />
      <Use xlinkHref="#a" stroke="#6cf" strokeWidth={6} />
      <Use xlinkHref="#a" stroke="#fff" strokeWidth={5} />
      <Use xlinkHref="#a" stroke="#69f" strokeWidth={3} />
      <Use xlinkHref="#a" stroke="#fff" strokeWidth={2} />
      <Use xlinkHref="#a" stroke="#000" filter="url(#b)" />
      <Path
        fill="none"
        stroke="#ccc"
        strokeWidth={4}
        d="M225 175q0-35 40-35h535q40 0 40 30m-480 20 25-5-5 35m5-35-45 55m120-40 15 15m11 53 34-23-25-10Zl43 4-9-27m-23 55 5 5m-4 68v9m40-7 22-5v20m-110 50h25m175 5v10m-35 90h20l-10-50m165-35h28v48Zv-25m28 25 22 40m-18-220 13 30h-15"
        filter="url(#b)"
      />
      <G filter="url(#c)" />
      <Use xlinkHref="#d" strokeOpacity={0} />
      <Text2 y=".7ex" transform="matrix(.8 0 0 .9 656 451)">
        <TSpan fontWeight="bold">{"*"}</TSpan>
      </Text2>
    </G>
  </Svg>
  )

    const svgRef = useRef();

    // Atributos generales
    let nombrePartida = '';
    let ganador = null;
    let turno= 0;
    let jugadores = [];
    let cartas= [];
    let descartes= [];
    let mapa = [];
    let colores = ['verde', 'rojo', 'azul', 'amarillo', 'rosa', 'morado'];
    let turnoJugador = '';
    let numJugadores = 3; // stub
    let partida= {}; // para inicializarlo
    let fase = 0; // Colocar- -> 0; Atacar -> 1; Maniobrar -> 2; Robar -> 3; Fin -> 4;
    // Atributos especfÃ­cios (mÃ­os, del jugador que juega en este cliente)
    const [numTropas, setNumTropas] = useState(1000);
    //let numTropas = 1000;
    const [tropasTest, setTropasTest] = useState([{terrainId: '', numTropas: 0, user: ''}]);
    let tropas = [{terrainId: '', numTropas: 0, user: ''}];
    let whoami= '';
    let colorMap =  {}; // no parece necesario
    let text= '';
    let tropasPuestas = 0;
    /*
    // FASES PARTIDA
    const Colocar = 0;
    const Atacar = 1;
    const Maniobrar = 2;
    const Robar = 3;
    const Fin = 4; // No se usa
    */
    let svgDoc = null;
    let eventoCancelado = false;
    // Ataque
    let ataqueOrigen = '';
    let ataqueDestino = '';
    let ataqueTropas = 0; 
    let avatarAMostrar = '';
    
  // Define event handlers for touch events
  const handleLowRiskPress = () => {
    // Handle touch event for low-risk zone
    console.log('Low risk zone pressed');
  };

  const handleMediumRiskPress = () => {
    // Handle touch event for medium-risk zone
    console.log('Medium risk zone pressed');
  };

  const handleHighRiskPress = () => {
    // Handle touch event for high-risk zone
    console.log('High risk zone pressed');
  };

  const stateMachine = (path, svgDoc, e) => {
    let regionId = path.id;
    console.log(`Se ha hecho clic en la regiÃ³n con ID: ${regionId}`)

  }

  const clickMapListen = (e) => {
    doc= e.nativeEvent.target;
    console.log('Click en el mapa:', doc);
  }

  cartasStub =() => {
    cartas = [
      // NA
      {territorio: "ALASKA", estrellas: 1},
      {territorio: "ALBERTA", estrellas: 2},
      {territorio: "AMERICA CENTRAL", estrellas: 1},
      {territorio: "ESTADOS UNIDOS ESTE", estrellas: 2},
      {territorio: "GROENLANDIA", estrellas: 1},
      {territorio: "TERRITORIOS DEL NOROESTE", estrellas: 2},
      {territorio: "ONTARIO", estrellas: 1},
      {territorio: "QUEBEC", estrellas: 2},
      {territorio: "ESTADOS UNIDOS OESTE", estrellas: 1},
      // SA
      {territorio: "ARGENTINA", estrellas: 1},
      {territorio: "BRASIL", estrellas: 2},
      {territorio: "PERU", estrellas: 1},
      {territorio: "VENEZUELA", estrellas: 2},
      // EU
      {territorio: "GRAN BRETANA", estrellas: 1},
      {territorio: "ISLANDIA", estrellas: 2},
      {territorio: "EUROPA NORTE", estrellas: 1},
      {territorio: "ESCANDINAVIA", estrellas: 1},
      {territorio: "EUROPA SUR", estrellas: 2},
      {territorio: "RUSIA", estrellas: 1},
      {territorio: "EUROPA OCCIDENTAL", estrellas: 1},
      // AF
      {territorio: "CONGO", estrellas: 1},
      {territorio: "AFRICA ORIENTAL", estrellas: 2},
      {territorio: "EGIPTO", estrellas: 1},
      {territorio: "MADAGASCAR", estrellas: 1},
      {territorio: "AFRICA NORTE", estrellas: 2},
      {territorio: "SUDAFRICA", estrellas: 1},
      // AS
      {territorio: "AFGANISTAN", estrellas: 1},
      {territorio: "CHINA", estrellas: 2},
      {territorio: "INDIA", estrellas: 1},
      {territorio: "IRKUTSK", estrellas: 2},
      {territorio: "JAPON", estrellas: 1},
      {territorio: "KAMCHATKA", estrellas: 2},
      {territorio: "ORIENTE MEDIO", estrellas: 1},
      {territorio: "MONGOLIA", estrellas: 2},
      {territorio: "SUDESTE ASIATICO", estrellas: 1},
      {territorio: "SIBERIA", estrellas: 2},
      {territorio: "URAL", estrellas: 1},
      {territorio: "YAKUTSK", estrellas: 2},
      // OC
      {territorio: "AUSTRALIA ORIENTAL", estrellas: 1},
      {territorio: "AUSTRALIA OCCIDENTAL", estrellas: 2},
      {territorio: "INDONESIA", estrellas: 1},
      {territorio: "NUEVA GUINEA", estrellas: 2}
    ];
  }

  mapaStub = () =>{
    const Alaska  ={ nombre: "ALASKA", frontera: ["ALBERTA", "TERRITORIOS DEL NOROESTE", "KAMCHATKA"], tropas: Math.floor(Math.random() * 2) + 1};
    const Alberta = { nombre: "ALBERTA", frontera: ["ALASKA", "ESTADOS UNIDOS OESTE" , "ONTARIO", "TERRITORIOS DEL NOROESTE"], tropas: Math.floor(Math.random() * 2) + 1};
    const AmericaCentral = { nombre: "AMERICA CENTRAL", frontera: ["ESTADOS UNIDOS ESTE", "ESTADOS UNIDOS OESTE", "VENEZUELA"], tropas: Math.floor(Math.random() * 2) + 1};
    const EstadosUnidosEste = { nombre: "ESTADOS UNIDOS ESTE", frontera: ["ALBERTA", "AMERICA CENTRAL", "ESTADOS UNIDOS OESTE", "ONTARIO"], tropas: Math.floor(Math.random() * 2) + 1};
    const Groenlandia = { nombre: "GROENLANDIA", frontera: ["TERRITORIOS DEL NOROESTE", "ONTARIO", "QUEBEC", "ISLANDIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const TerritoriosDelNoroeste = { nombre: "TERRITORIOS DEL NOROESTE", frontera: ["ALASKA", "ALBERTA", "ONTARIO", "GROENLANDIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const Ontario = { nombre: "ONTARIO", frontera: ["TERRITORIOS DEL NOROESTE", "ALASKA", "QUEBEC", "GROENLANDIA", "ESTADOS UNIDOS OESTE", "ESTADOS UNIDOS ESTE"], tropas: Math.floor(Math.random() * 2) + 1};
    const Quebec = { nombre: "QUEBEC", frontera: ["ONTARIO", "ESTADOS UNIDOS ESTE", "GROENLANDIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const EstadosUnidosOeste = { nombre: "ESTADOS UNIDOS OESTE", frontera: ["ESTADOS UNIDOS ESTE", "ONTARIO", "QUEBEC", "AMERICA CENTRAL"], tropas: Math.floor(Math.random() * 2) + 1};
    const Argentina = { nombre: "ARGENTINA", frontera: ["PERU", "BRASIL"], tropas: Math.floor(Math.random() * 2) + 1};
    const Brasil = { nombre: "BRASIL", frontera: ["ARGENTINA", "VENEZUELA", "PERU", "AFRICA NORTE"], tropas: Math.floor(Math.random() * 2) + 1};
    const Peru = { nombre: "PERU", frontera: ["ARGENTINA", "VENEZUELA", "BRASIL"], tropas: Math.floor(Math.random() * 2) + 1};
    const Venezuela = { nombre: "VENEZUELA ", frontera: ["AMERICA CENTRAL", "PERU", "BRASIL"], tropas: Math.floor(Math.random() * 2) + 1};
    const GranBretana = { nombre: "GRAN BRETANA", frontera: ["EUROPA OCCIDENTAL", "EUROPA NORTE", "ESCANDINAVIA", "ISLANDIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const Islandia = { nombre: "ISLANDIA", frontera: ["GRAN BRETANA", "GROENLANDIA", "ESCANDINAVIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const EuropaNorte = { nombre: "EUROPA NORTE", frontera: ["EUROPA SUR", "EUROPA OCCIDENTAL", "RUSIA", "GRAN BRETANA", "ESCANDINAVIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const Escandinavia = { nombre: "ESCANDINAVIA", frontera: ["RUSIA", "EUROPA NORTE", "GRAN BRETANA", "ISLANDIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const EuropaSur = { nombre: "EUROPA SUR", frontera: ["EUROPA OCCIDENTAL", "EUROPA NORTE", "RUSIA", "AFRICA NORTE", "EGIPTO"], tropas: Math.floor(Math.random() * 2) + 1};
    const Rusia = { nombre: "RUSIA", frontera: ["ESCANDINAVIA", "EUROPA NORTE", "EUROPA SUR", "URAL", "AFGANISTAN", "ORIENTE MEDIO"], tropas: Math.floor(Math.random() * 2) + 1};
    const EuropaOccidental = { nombre: "EUROPA OCCIDENTAL", frontera: ["EUROPA NORTE", "EUROPA SUR", "AFRICA NORTE", "GRAN BRETANA"], tropas: Math.floor(Math.random() * 2) + 1};
    const Congo = { nombre: "CONGO", frontera: ["AFRICA ORIENTAL", "SUDAFRICA", "AFRICA NORTE"], tropas: Math.floor(Math.random() * 2) + 1};
    const AfricaOriental = { nombre: "AFRICA ORIENTAL", frontera: ["EGIPTO", "AFRICA NORTE", "CONGO", "SUDAFRICA", "MADAGASCAR"], tropas: Math.floor(Math.random() * 2) + 1};
    const Egipto = { nombre: "EGIPTO", frontera: ["AFRICA NORTE", "AFRICA ORIENTAL", "EUROPA SUR"], tropas: Math.floor(Math.random() * 2) + 1};
    const Madagascar = { nombre: "MADAGASCAR", frontera: ["AFRICA ORIENTAL", "SUDAFRICA"], tropas: Math.floor(Math.random() * 2) + 1};
    const AfricaNorte = { nombre: "AFRICA NORTE", frontera: ["EGIPTO", "BRASIL", "AFRICA ORIENTAL", "CONGO"], tropas: Math.floor(Math.random() * 2) + 1};
    const Sudafrica = { nombre: "SUDAFRICA", frontera: ["MADAGASCAR", "CONGO", "AFRICA ORIENTAL"], tropas: Math.floor(Math.random() * 2) + 1};
    const Afganistan = { nombre: "AFGANISTAN", frontera: ["RUSIA", "URAL", "INDIA", "ORIENTE MEDIO", "CHINA"], tropas: Math.floor(Math.random() * 2) + 1};
    const China = { nombre: "CHINA", frontera: ["INDIA", "SUDESTE ASIATIOCO", "MONGOLIA", "SIBERIA", "URAL", "AFGANISTAN"], tropas: Math.floor(Math.random() * 2) + 1};
    const India = { nombre: "INDIA", frontera: ["CHINA", "ORIENTE MEDIO", "AFGANISTAN", "SUDESTE ASIATICO"], tropas: Math.floor(Math.random() * 2) + 1};
    const Irkutsk = { nombre: "IRKUTSK", frontera: ["YAKUTSK", "SIBERIA", "MONGOLIA", "KAMCHATKA"], tropas: Math.floor(Math.random() * 2) + 1};
    const Japon = { nombre: "JAPON", frontera: ["KAMCHATKA", "MONGOLIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const Kamchatka = { nombre: "KAMCHATKA", frontera: ["ALASKA", "YAKUTSK", "IRKUTSK", "MONGOLIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const OrienteMedio = { nombre: "ORIENTE MEDIO", frontera: ["RUSIA", "AFGANISTAN", "INDIA", "EGIPTO"], tropas: Math.floor(Math.random() * 2) + 1};
    const Mongolia = { nombre: "MONGOLIA", frontera: ["IRKUTSK", "CHINA", "JAPON", "SIBERIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const SudesteAsiatico = { nombre: "SUDESTE ASIATICO", frontera: ["CHINA", "INDIA", "INDONESIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const Siberia = { nombre: "SIBERIA", frontera: ["IRKUTSK", "YAKUTSK", "MONGOLIA", "CHINA", "URAL"], tropas: Math.floor(Math.random() * 2) + 1};
    const Ural = { nombre: "URAL", frontera: ["SIBERIA", "RUSIA", "AFGANISTAN"], tropas: Math.floor(Math.random() * 2) + 1};
    const Yakutsk = { nombre: "YAKUTSK", frontera: ["IRKUTSK", "KAMCHATKA", "SIBERIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const Indonesia = { nombre: "INDONESIA", frontera: ["SUDESTE ASIATICO", "NUEVA GUINEA", "AUSTRALIA OCCIDENTAL"], tropas: Math.floor(Math.random() * 2) + 1};
    const NuevaGuinea = { nombre: "NUEVA GUINEA", frontera: ["AUSTRALIA OCCIDENTAL", "AUSTRALIA ORIENTAL", "INDONESIA"], tropas: Math.floor(Math.random() * 2) + 1};
    const AustraliaOccidental = { nombre: "AUSTRALIA OCCIDENTAL", frontera: ["AUSTRALIA ORIENTAL", "INDONESIA", "NUEVA GUINEA"], tropas: Math.floor(Math.random() * 2) + 1};
    const AustraliaOriental = { nombre: "AUSTRALIA ORIENTAL", frontera: ["AUSTRALIA OCCIDENTAL", "NUEVA GUINEA"], tropas: Math.floor(Math.random() * 2) + 1};

    const NATerritorios = [
      Alaska, Alberta, AmericaCentral, EstadosUnidosEste,
      Groenlandia, TerritoriosDelNoroeste, Ontario, Quebec, EstadosUnidosOeste
    ];

    const SATerritorios = [
      Argentina, Brasil, Peru, Venezuela
    ];

    const EUTerritorios = [
      GranBretana, Islandia, EuropaNorte, Escandinavia,
      EuropaSur, Rusia, EuropaOccidental
    ];

    const AFTerritorios = [
      Congo, AfricaOriental, Egipto, Madagascar,
      AfricaNorte, Sudafrica
    ];

    const ASTerritorios = [
      Afganistan, China, India, Irkutsk, Japon,
      Kamchatka, OrienteMedio, Mongolia, SudesteAsiatico,
      Siberia, Ural, Yakutsk
    ];

    const OCTerritorios = [
      Indonesia, NuevaGuinea, AustraliaOccidental, AustraliaOriental
    ];

    // Create continents
    const NA = {
      territorios: NATerritorios,
      valor: 5
    }

    const SA = {
      territorios: SATerritorios,
      valor: 2
    }

    const EU = {
      territorios: EUTerritorios,
      valor: 5
    }

    const AF = {
      territorios: AFTerritorios,
      valor: 3
    }

    const AS = {
      territorios: ASTerritorios,
      valor: 7
    }

    const OC = {
      territorios: OCTerritorios,
      valor: 2
    }

    const Mapa = [NA, SA, EU, AF, AS, OC];
    mapa = Mapa;
    // Shuffle function
    let shuffle = (array) => {
      let currentIndex = array.length, temporaryValue, randomIndex;

      // While there remain elements to shuffle...
      while (0 !== currentIndex) {

        // Pick a remaining element...
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex -= 1;

        // And swap it with the current element.
        temporaryValue = array[currentIndex];
        array[currentIndex] = array[randomIndex];
        array[randomIndex] = temporaryValue;
      }

      return array;
    };
    // Flatten the Mapa array to get an array of all Territorio objects
    let allTerritories = mapa.flatMap(continente => continente.territorios);

    // Shuffle the territories
    let shuffledTerritories = shuffle(allTerritories);

    // Distribute the territories among the players
    jugadores.forEach((jugador, i) => {
      jugador.territorios = shuffledTerritories
        .filter((_, index) => index % jugadores.length === i)
        .slice(0, Math.floor(shuffledTerritories.length / jugadores.length)) 
        .map(territorio => territorio.nombre); // Store only the territory name
    });

    //console.log(jugadores);
  }

  const distribuirPiezas = () => {
    //console.log("Continentes", mapa)
    //console.log("Jugadores", jugadores)
    for(let continente of mapa){
      for(let territorio of continente.territorios){
        // Find the player who owns this territory
        let jugador = partida.jugadores.find(jugador => jugador.territorios.includes(territorio.nombre));
        //console.log(jugador)
  
        // If a player was found, get their color
        let color = jugador ? jugador.color : undefined;
        
        if(color !== undefined) {
         console.log(`The color of territory ${territorio.nombre} is ${color}, and it has ${territorio.tropas} troops.`);
         if(jugador){
          //console.log(jugador.usuario)
          colocarTropas(territorio.nombre, svgDoc, 50, 50, jugador.usuario, true, false, territorio.tropas);
         }

         //TODO: COMPRENDER ESTO Y MIRAR COMO HACERLO EN REACT NATIVE


         //let svgElement = this.svgDoc?.getElementById(territorio.nombre);
         /*let event;
         //console.log(territorio.nombre, svgElement);
         //console.log(this.svgDoc)
          if (svgElement && svgElement.nodeName === 'path') {
            //console.log(' entro en el if')
            //let bbox = ((svgElement as unknown) as SVGGraphicsElement).getBBox();
            let rect = svgElement.getBoundingClientRect();

            let centerX = rect.left + bbox.width / 2;
            let centerY = rect.top + bbox.height / 2 - 70; 

            // Create a fake MouseEvent
            event = new MouseEvent('click', {
              clientX: centerX,
              clientY: centerY,
            });
             // Dispatch the event on svgElement
            svgElement.dispatchEvent(event);
            //console.log(event)*/
          }
        /*
         if(jugador && event && this.svgDoc){
          this.colocarTropas(event, this.svgDoc, 50, 50, jugador.usuario, true, false, territorio.tropas)
          //console.log(jugador.usuario)
          }
        }*/
      }
    }

    setNumTropas(40);
    /*
    // Esto es stub, luego se harÃ¡ una llamada al back para obtener el nÃºmero de tropas
    switch(this.partida.jugadores.length){
      case 2: 
        this.numTropas = 40;
        break;
      case 3:
        this.numTropas = 35;
        break;
      case 4:
        this.numTropas = 30;
        break;
      case 5:
        this.numTropas = 25;
        break;
      case 6:
        this.numTropas = 20;
        break;
    }*/
  }

  const inicializarPartida = (partida) => {
    // Inicializa los atributos de la partida
    
    jugadores = partida.jugadores;
    console.log(jugadores);
    for (let i = 0; i < jugadores.length; i++) {
      jugadores[i].color = colores[i];
    }
    turno  = partida.turno;
    nombrePartida = partida.nombre;
    numJugadores = partida.jugadores.length;
    mapa = partida.mapa;

    //TODO fetch mapa del back
    mapaStub();

    descartes = partida.descartes;

    ganador = partida.ganador;
    fase = partida.fase;


    //TODO fetch cartas del back
    cartasStub();

    //turnoJugador = partida.jugadores[partida.turno % this.numJugadores];

  }

  const onLoad = () => {
    //TODO fetch parida del back
    partida = { _id: '1', maxJugadores: 3, nombre: 'Partida 1', fechaInicio: '2021-06-01T00:00:00.000Z', fechaFin: '2021-06-01T00:00:00.000Z'
    , password: '1234', ganador: null, turno: 0, jugadores: [{usuario: "a", color: null}, {usuario: "b", color: null}], cartas: [], descartes: [], mapa: [], chat: [], fase: 0, __v: 0};
 
      inicializarPartida(partida);

      distribuirPiezas();

  }

  const colocarTropas = (territoriname, svgDoc, imgWidth, imgHeight, user, init, select, limite) => {
    // Ask the user for the number of troops

    let troops;
    let duenno = jugadores.find(jugador => jugador.usuario == user);

    if(!(territoriname && duenno && duenno.territorios.includes(territoriname))){
      alert('No puedes poner tropas en territorios que no te pertenecen');
      //this.cdr.detectChanges();
      return;
    }

    if(limite)
      troops = limite.toString();
    else 
     troops = window.prompt('CuÃ¡ntas tropas deseas aÃ±adir?');

    // Check if the user clicked the Cancel button
    if (troops === null) {
      return;
    }

    let numTroops = parseInt(troops);

    if (!init && (numTroops > numTropas)) {
      //this.toastr.error('Â¡No tienes suficientes tropas!');
      return;
    }
    setNumTropas(numTropas - numTroops);

    tropasPuestas += numTroops;
   
    const terrainInfo = tropasTest.find(terrain => terrain.terrainId === territoriname);
    console.log(terrainInfo)
    if (terrainInfo) {
      terrainInfo.numTropas += numTroops;
      terrainInfo.user = user;
      numTroops = terrainInfo.numTropas;
      setTropasTest(tropasTest);
    } else {
      console.log("territorio: " + territoriname)
      tropasTest.push({terrainId: territoriname, numTropas: numTroops, user});
      setTropasTest(tropasTest);
    }

    // Get the point at which the click event occurred
    const svgElement = svgDoc;
    if (!svgElement) {
      //console.error('SVG element not found');
      return;
    }
    /*
    // Check if the input is a valid number
    if (isNaN(numTroops) || (numTroops < 1 && !select)) {
      alert('Please enter a valid number of troops.');
      //this.cdr.detectChanges();
      return;
    }

    // Get the point at which the click event occurred
    const svgElement = svgDoc.rootElement;
    if (!svgElement) {
      console.error('SVG element not found');
      return;
    }

    const pt = svgElement.createSVGPoint();
    pt.x = e.clientX;
    pt.y = e.clientY;

    // Transform the point to the SVG coordinate system
    const screenCTM = svgElement.getScreenCTM();
    if (!screenCTM) {
      console.error('Unable to get screen CTM');
      return;
    }

    */
  }


  return (
    <View style={styles.container} >
      <View style={styles.containerleft}>
      <ReactNativeZoomableView
        maxZoom={3}
        minZoom={0.8}
        zoomStep={0.5}
        initialZoom={1}
        bindToBorders={false}
>
        <MapSVGComponent />
      </ReactNativeZoomableView>
      </View>
      <View style={styles.containerRight}>
        <Text1 style={styles.zoneText}>Tropas: {numTropas}</Text1>

        </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'start',
    flexDirection: 'row',
    justifyContent: 'left',
  },
  containerRight: {
    left: 50,
    top: 50,
    flex: 1,
    alignItems: 'end',
    flexDirection: 'column',
    justifyContent: 'right',
  },
  containerleft: {
    height: 400,
    width: 600,

  },
  mapImage: {
    width: 300,
    height: 300,
  },
  lowRiskZone: {
    left: 50,
    width: 100,
    height: 100,
    backgroundColor: 'green',
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 50,
  },
  mediumRiskZone: {
    position: 'absolute',
    top: 150,
    left: 150,
    width: 100,
    height: 100,
    backgroundColor: 'yellow',
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 50,
  },
  highRiskZone: {
    position: 'absolute',
    top: 250,
    left: 250,
    width: 100,
    height: 100,
    backgroundColor: 'red',
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 50,
  },
  zoneText: {
    color: 'black',
    fontWeight: 'bold',
  },
  svgcontainer: {
    width: 1000,
    height: 1000,
  },
});
